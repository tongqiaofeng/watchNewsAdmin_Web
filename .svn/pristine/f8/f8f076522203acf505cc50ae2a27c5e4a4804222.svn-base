{"remainingRequest":"G:\\aa-tong\\my-project\\watchNewsAdmin_Web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\aa-tong\\my-project\\watchNewsAdmin_Web\\src\\components\\news-release.vue?vue&type=template&id=4646e7cb&scoped=true&","dependencies":[{"path":"G:\\aa-tong\\my-project\\watchNewsAdmin_Web\\src\\components\\news-release.vue","mtime":1657160327419},{"path":"G:\\aa-tong\\my-project\\watchNewsAdmin_Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\aa-tong\\my-project\\watchNewsAdmin_Web\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"G:\\aa-tong\\my-project\\watchNewsAdmin_Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\aa-tong\\my-project\\watchNewsAdmin_Web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}