{"remainingRequest":"G:\\aa-tong\\my-project\\copy\\watchNewsAdmin_Web01\\node_modules\\babel-loader\\lib\\index.js!G:\\aa-tong\\my-project\\copy\\watchNewsAdmin_Web01\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!G:\\aa-tong\\my-project\\copy\\watchNewsAdmin_Web01\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\aa-tong\\my-project\\copy\\watchNewsAdmin_Web01\\src\\components\\add-release.vue?vue&type=script&lang=js&","dependencies":[{"path":"G:\\aa-tong\\my-project\\copy\\watchNewsAdmin_Web01\\src\\components\\add-release.vue","mtime":1656934074885},{"path":"G:\\aa-tong\\my-project\\copy\\watchNewsAdmin_Web01\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\aa-tong\\my-project\\copy\\watchNewsAdmin_Web01\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"G:\\aa-tong\\my-project\\copy\\watchNewsAdmin_Web01\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\aa-tong\\my-project\\copy\\watchNewsAdmin_Web01\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["add-release.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <editor\r\n    id=\"tinymce\"\r\n    ref=\"myQuillEditor\"\r\n    v-model=\"value\"\r\n    :init=\"init\"\r\n  ></editor>\r\n</template>\r\n\r\n<script>\r\nimport tinymce from \"tinymce\";\r\nimport Editor from \"@tinymce/tinymce-vue\";\r\n\r\nimport \"tinymce/themes/silver/theme\";\r\n\r\nimport \"tinymce/plugins/directionality\";\r\nimport \"tinymce/plugins/image\";\r\nimport \"tinymce/plugins/link\";\r\nimport \"tinymce/plugins/code\";\r\nimport \"tinymce/plugins/media\";\r\nimport \"tinymce/plugins/charmap\";\r\nimport \"tinymce/plugins/hr\";\r\nimport \"tinymce/plugins/insertdatetime\";\r\nimport \"tinymce/plugins/advlist\";\r\nimport \"tinymce/plugins/imagetools\";\r\nimport \"tinymce/plugins/lists\";\r\nimport \"tinymce/plugins/textpattern\";\r\nimport \"tinymce/plugins/emoticons\";\r\nimport \"tinymce/plugins/autosave\";\r\nimport \"tinymce/plugins/autoresize\";\r\n\r\nexport default {\r\n  name: \"MyTinymce\",\r\n  props: {\r\n    editorDadContent: \"\",\r\n  },\r\n  components: {\r\n    Editor,\r\n  },\r\n  data() {\r\n    return {\r\n      pathUrl: \"\",\r\n      value: this.editorDadContent, //父组件通过ref拿到该组件的值\r\n      init: {\r\n        selector: \"#tinymce\",\r\n        language_url: \"/tinymce/langs/zh_CN.js\",\r\n        language: \"zh_CN\",\r\n        skin_url: \"/tinymce/skins/ui/oxide\", //编辑器需要一个skin才能正常工作，所以要设置一个skin_url指向之前复制出来的skin文件\r\n        height: 600,\r\n        autoresize_min_height: 600,\r\n        autoresize_max_height: 1000,\r\n        plugins:\r\n          \"directionality image link media code charmap hr insertdatetime advlist lists imagetools textpattern emoticons autosave autoresize\",\r\n        toolbar:\r\n          \"fontselect fontsizeselect link lineheight forecolor backcolor bold italic underline strikethrough | alignleft aligncenter alignright alignjustify | image quicklink h2 h3 blockquote table numlist bullist preview fullscreen\", //工具栏\r\n        browser_spellcheck: true, // 拼写检查\r\n        branding: false, // 去水印\r\n        elementpath: false, //禁用编辑器底部的状态栏\r\n        statusbar: false, // 隐藏编辑器底部的状态栏\r\n        paste_data_images: true, // 允许粘贴图像\r\n        menubar: false, // 隐藏最上方menu\r\n\r\n        file_picker_types: \"image\",\r\n        images_upload_credentials: true,\r\n        fontsize_formats: \"14px 16px 18px 20px 24px 26px 28px 30px 32px 36px\", //字体大小\r\n        font_formats:\r\n          \"微软雅黑=Microsoft YaHei,Helvetica Neue;PingFang SC;sans-serif;苹果苹方=PingFang SC,Microsoft YaHei,sans-serif;宋体=simsun;serifsans-serif;Terminal=terminal;monaco;Times New Roman=times new roman;times\", //字体\r\n        /**\r\n         * 下面方法是为tinymce添加自定义插入图片按钮\r\n         * 借助iview的Upload组件,将图片先上传到存储云上，再将图片的存储地址放入编辑器内容\r\n         */\r\n        // 图片上传三个参数，图片数据，成功时的回调函数，失败时的回调函数\r\n        images_upload_handler: async (blobInfo, success, failure) => {\r\n          let file = blobInfo.blob();\r\n          console.log(file);\r\n          await this.handleAdd_quill_editor(file);\r\n\r\n          if (this.pathUrl) {\r\n            success(this.pathUrl);\r\n          } else {\r\n            failure(\"error\");\r\n          }\r\n        },\r\n      },\r\n    };\r\n  },\r\n  watch: {\r\n    editorDadContent(newV, oldV) {\r\n      this.value = newV;\r\n    },\r\n    value(newV, oldV) {\r\n      // console.log(newV);\r\n      this.$emit(\"editorCon\", this.value);\r\n    },\r\n  },\r\n  mounted() {\r\n    tinymce.init({});\r\n  },\r\n  methods: {\r\n    // 富文本 上传图片\r\n    async handleAdd_quill_editor(val) {\r\n      let file = val;\r\n      // console.log(file);\r\n      this.uploadFileType = file.type;\r\n\r\n      let that = this;\r\n      if (file === undefined) {\r\n        return;\r\n      }\r\n      if (file.size / 1024 > 1025) {\r\n        await this.photoCompress(\r\n          file,\r\n          {\r\n            quality: 0.7,\r\n          },\r\n          (base64Codes) => {\r\n            let bl = that.base64UrlToBlob(base64Codes);\r\n            that.uploadLice(bl);\r\n          }\r\n        );\r\n      } else {\r\n        // 小于等于1M 原图上传\r\n        await this.uploadLice(file);\r\n      }\r\n    },\r\n    // base64 转 Blob 格式 和file格式\r\n    base64UrlToBlob(urlData) {\r\n      let arr = urlData.split(\",\"),\r\n        mime = arr[0].match(/:(.*?);/)[1], // 去掉url的头，并转化为byte\r\n        bstr = atob(arr[1]), // 处理异常,将ascii码小于0的转换为大于0\r\n        n = bstr.length,\r\n        u8arr = new Uint8Array(n);\r\n      while (n--) {\r\n        u8arr[n] = bstr.charCodeAt(n);\r\n      }\r\n      // 转blob\r\n      // return new Blob([u8arr], {type: mime})\r\n      let filename = Date.parse(new Date()) + \".jpg\";\r\n      // 转file\r\n      return new File([u8arr], filename, {\r\n        type: mime,\r\n      });\r\n    },\r\n    /*压缩图片\r\n      file：文件(类型是图片格式)，\r\n      obj：文件压缩后对象width， height， quality(0-1)\r\n      callback：容器或者回调函数\r\n      */\r\n    async photoCompress(file, obj, callback) {\r\n      let that = this;\r\n      let ready = new FileReader();\r\n      /* 开始读取指定File对象中的内容. 读取操作完成时,返回一个URL格式的字符串. */\r\n      ready.readAsDataURL(file);\r\n      ready.onload = (event) => {\r\n        let re = event.target.result;\r\n        that.canvasDataURL(re, obj, callback); // 开始压缩\r\n      };\r\n    },\r\n    /* 利用canvas数据化图片进行压缩 */\r\n    /* 图片转base64 */\r\n    canvasDataURL(path, obj, callback) {\r\n      let img = new Image();\r\n      img.src = path;\r\n      img.onload = function() {\r\n        let that = this; // 指到img\r\n        // 默认按比例压缩\r\n        let w = that.width,\r\n          h = that.height,\r\n          scale = w / h;\r\n        w = obj.width || w;\r\n        h = obj.height || w / scale;\r\n        let quality = 0.7; // 默认图片质量为0.7\r\n        // 生成canvas\r\n        let canvas = document.createElement(\"canvas\");\r\n        let ctx = canvas.getContext(\"2d\");\r\n\r\n        // 创建属性节点\r\n        let anw = document.createAttribute(\"width\");\r\n        anw.nodeValue = w;\r\n        let anh = document.createAttribute(\"height\");\r\n        anh.nodeValue = h;\r\n        canvas.setAttributeNode(anw);\r\n        canvas.setAttributeNode(anh);\r\n        // 铺底色\r\n        ctx.fillStyle = \"#fff\";\r\n        ctx.fillRect(0, 0, w, h);\r\n        ctx.drawImage(that, 0, 0, w, h);\r\n\r\n        // 图像质量\r\n        if (obj.quality && obj.quality >= 1 && obj.quality < 0) {\r\n          quality = obj.quality;\r\n        }\r\n        // quality值越小，所绘制出的图像越模糊\r\n        let base64 = canvas.toDataURL(\"image/jpeg\", quality);\r\n        // 回调函数返回base64的值\r\n        callback(base64);\r\n      };\r\n    },\r\n    //  返回file文件，调用接口执行上传\r\n    async uploadLice(file) {\r\n      let formdata = new FormData(); //创建form对象\r\n      formdata.append(\"upload-images\", file); //通过append向form对象添加数据\r\n\r\n      await this.$axios\r\n        .post(this.$store.state.baseUrl + \"/stock/upload\", formdata)\r\n        .then((res) => {\r\n          console.log(\"富文本编辑器上传图片\", res);\r\n          this.pathUrl =\r\n            this.$store.state.baseUrl + \"/stock/file/\" + res.data.split(\"|\")[0];\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped></style>\r\n"],"sourceRoot":"src/components"}]}