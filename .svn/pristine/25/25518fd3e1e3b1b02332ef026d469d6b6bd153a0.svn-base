{"remainingRequest":"G:\\aa-tong\\my-project\\copy\\watchNewsAdmin_Web01\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\aa-tong\\my-project\\copy\\watchNewsAdmin_Web01\\src\\components\\add-release.vue?vue&type=script&lang=js&","dependencies":[{"path":"G:\\aa-tong\\my-project\\copy\\watchNewsAdmin_Web01\\src\\components\\add-release.vue","mtime":1656934074885},{"path":"G:\\aa-tong\\my-project\\copy\\watchNewsAdmin_Web01\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\aa-tong\\my-project\\copy\\watchNewsAdmin_Web01\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"G:\\aa-tong\\my-project\\copy\\watchNewsAdmin_Web01\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\aa-tong\\my-project\\copy\\watchNewsAdmin_Web01\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["add-release.vue"],"names":[],"mappings":";;;;;;;;;;AAUA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"add-release.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <editor\r\n    id=\"tinymce\"\r\n    ref=\"myQuillEditor\"\r\n    v-model=\"value\"\r\n    :init=\"init\"\r\n  ></editor>\r\n</template>\r\n\r\n<script>\r\nimport tinymce from \"tinymce\";\r\nimport Editor from \"@tinymce/tinymce-vue\";\r\n\r\nimport \"tinymce/themes/silver/theme\";\r\n\r\nimport \"tinymce/plugins/directionality\";\r\nimport \"tinymce/plugins/image\";\r\nimport \"tinymce/plugins/link\";\r\nimport \"tinymce/plugins/code\";\r\nimport \"tinymce/plugins/media\";\r\nimport \"tinymce/plugins/charmap\";\r\nimport \"tinymce/plugins/hr\";\r\nimport \"tinymce/plugins/insertdatetime\";\r\nimport \"tinymce/plugins/advlist\";\r\nimport \"tinymce/plugins/imagetools\";\r\nimport \"tinymce/plugins/lists\";\r\nimport \"tinymce/plugins/textpattern\";\r\nimport \"tinymce/plugins/emoticons\";\r\nimport \"tinymce/plugins/autosave\";\r\nimport \"tinymce/plugins/autoresize\";\r\n\r\nexport default {\r\n  name: \"MyTinymce\",\r\n  props: {\r\n    editorDadContent: \"\",\r\n  },\r\n  components: {\r\n    Editor,\r\n  },\r\n  data() {\r\n    return {\r\n      pathUrl: \"\",\r\n      value: this.editorDadContent, //父组件通过ref拿到该组件的值\r\n      init: {\r\n        selector: \"#tinymce\",\r\n        language_url: \"/tinymce/langs/zh_CN.js\",\r\n        language: \"zh_CN\",\r\n        skin_url: \"/tinymce/skins/ui/oxide\", //编辑器需要一个skin才能正常工作，所以要设置一个skin_url指向之前复制出来的skin文件\r\n        height: 600,\r\n        autoresize_min_height: 600,\r\n        autoresize_max_height: 1000,\r\n        plugins:\r\n          \"directionality image link media code charmap hr insertdatetime advlist lists imagetools textpattern emoticons autosave autoresize\",\r\n        toolbar:\r\n          \"fontselect fontsizeselect link lineheight forecolor backcolor bold italic underline strikethrough | alignleft aligncenter alignright alignjustify | image quicklink h2 h3 blockquote table numlist bullist preview fullscreen\", //工具栏\r\n        browser_spellcheck: true, // 拼写检查\r\n        branding: false, // 去水印\r\n        elementpath: false, //禁用编辑器底部的状态栏\r\n        statusbar: false, // 隐藏编辑器底部的状态栏\r\n        paste_data_images: true, // 允许粘贴图像\r\n        menubar: false, // 隐藏最上方menu\r\n\r\n        file_picker_types: \"image\",\r\n        images_upload_credentials: true,\r\n        fontsize_formats: \"14px 16px 18px 20px 24px 26px 28px 30px 32px 36px\", //字体大小\r\n        font_formats:\r\n          \"微软雅黑=Microsoft YaHei,Helvetica Neue;PingFang SC;sans-serif;苹果苹方=PingFang SC,Microsoft YaHei,sans-serif;宋体=simsun;serifsans-serif;Terminal=terminal;monaco;Times New Roman=times new roman;times\", //字体\r\n        /**\r\n         * 下面方法是为tinymce添加自定义插入图片按钮\r\n         * 借助iview的Upload组件,将图片先上传到存储云上，再将图片的存储地址放入编辑器内容\r\n         */\r\n        // 图片上传三个参数，图片数据，成功时的回调函数，失败时的回调函数\r\n        images_upload_handler: async (blobInfo, success, failure) => {\r\n          let file = blobInfo.blob();\r\n          console.log(file);\r\n          await this.handleAdd_quill_editor(file);\r\n\r\n          if (this.pathUrl) {\r\n            success(this.pathUrl);\r\n          } else {\r\n            failure(\"error\");\r\n          }\r\n        },\r\n      },\r\n    };\r\n  },\r\n  watch: {\r\n    editorDadContent(newV, oldV) {\r\n      this.value = newV;\r\n    },\r\n    value(newV, oldV) {\r\n      // console.log(newV);\r\n      this.$emit(\"editorCon\", this.value);\r\n    },\r\n  },\r\n  mounted() {\r\n    tinymce.init({});\r\n  },\r\n  methods: {\r\n    // 富文本 上传图片\r\n    async handleAdd_quill_editor(val) {\r\n      let file = val;\r\n      // console.log(file);\r\n      this.uploadFileType = file.type;\r\n\r\n      let that = this;\r\n      if (file === undefined) {\r\n        return;\r\n      }\r\n      if (file.size / 1024 > 1025) {\r\n        await this.photoCompress(\r\n          file,\r\n          {\r\n            quality: 0.7,\r\n          },\r\n          (base64Codes) => {\r\n            let bl = that.base64UrlToBlob(base64Codes);\r\n            that.uploadLice(bl);\r\n          }\r\n        );\r\n      } else {\r\n        // 小于等于1M 原图上传\r\n        await this.uploadLice(file);\r\n      }\r\n    },\r\n    // base64 转 Blob 格式 和file格式\r\n    base64UrlToBlob(urlData) {\r\n      let arr = urlData.split(\",\"),\r\n        mime = arr[0].match(/:(.*?);/)[1], // 去掉url的头，并转化为byte\r\n        bstr = atob(arr[1]), // 处理异常,将ascii码小于0的转换为大于0\r\n        n = bstr.length,\r\n        u8arr = new Uint8Array(n);\r\n      while (n--) {\r\n        u8arr[n] = bstr.charCodeAt(n);\r\n      }\r\n      // 转blob\r\n      // return new Blob([u8arr], {type: mime})\r\n      let filename = Date.parse(new Date()) + \".jpg\";\r\n      // 转file\r\n      return new File([u8arr], filename, {\r\n        type: mime,\r\n      });\r\n    },\r\n    /*压缩图片\r\n      file：文件(类型是图片格式)，\r\n      obj：文件压缩后对象width， height， quality(0-1)\r\n      callback：容器或者回调函数\r\n      */\r\n    async photoCompress(file, obj, callback) {\r\n      let that = this;\r\n      let ready = new FileReader();\r\n      /* 开始读取指定File对象中的内容. 读取操作完成时,返回一个URL格式的字符串. */\r\n      ready.readAsDataURL(file);\r\n      ready.onload = (event) => {\r\n        let re = event.target.result;\r\n        that.canvasDataURL(re, obj, callback); // 开始压缩\r\n      };\r\n    },\r\n    /* 利用canvas数据化图片进行压缩 */\r\n    /* 图片转base64 */\r\n    canvasDataURL(path, obj, callback) {\r\n      let img = new Image();\r\n      img.src = path;\r\n      img.onload = function() {\r\n        let that = this; // 指到img\r\n        // 默认按比例压缩\r\n        let w = that.width,\r\n          h = that.height,\r\n          scale = w / h;\r\n        w = obj.width || w;\r\n        h = obj.height || w / scale;\r\n        let quality = 0.7; // 默认图片质量为0.7\r\n        // 生成canvas\r\n        let canvas = document.createElement(\"canvas\");\r\n        let ctx = canvas.getContext(\"2d\");\r\n\r\n        // 创建属性节点\r\n        let anw = document.createAttribute(\"width\");\r\n        anw.nodeValue = w;\r\n        let anh = document.createAttribute(\"height\");\r\n        anh.nodeValue = h;\r\n        canvas.setAttributeNode(anw);\r\n        canvas.setAttributeNode(anh);\r\n        // 铺底色\r\n        ctx.fillStyle = \"#fff\";\r\n        ctx.fillRect(0, 0, w, h);\r\n        ctx.drawImage(that, 0, 0, w, h);\r\n\r\n        // 图像质量\r\n        if (obj.quality && obj.quality >= 1 && obj.quality < 0) {\r\n          quality = obj.quality;\r\n        }\r\n        // quality值越小，所绘制出的图像越模糊\r\n        let base64 = canvas.toDataURL(\"image/jpeg\", quality);\r\n        // 回调函数返回base64的值\r\n        callback(base64);\r\n      };\r\n    },\r\n    //  返回file文件，调用接口执行上传\r\n    async uploadLice(file) {\r\n      let formdata = new FormData(); //创建form对象\r\n      formdata.append(\"upload-images\", file); //通过append向form对象添加数据\r\n\r\n      await this.$axios\r\n        .post(this.$store.state.baseUrl + \"/stock/upload\", formdata)\r\n        .then((res) => {\r\n          console.log(\"富文本编辑器上传图片\", res);\r\n          this.pathUrl =\r\n            this.$store.state.baseUrl + \"/stock/file/\" + res.data.split(\"|\")[0];\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped></style>\r\n"]}]}