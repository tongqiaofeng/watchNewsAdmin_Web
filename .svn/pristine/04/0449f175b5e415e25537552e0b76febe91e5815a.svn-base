{"remainingRequest":"D:\\aa-tong\\my-projects\\beautySalon\\salon-admin\\node_modules\\babel-loader\\lib\\index.js!D:\\aa-tong\\my-projects\\beautySalon\\salon-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\aa-tong\\my-projects\\beautySalon\\salon-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\aa-tong\\my-projects\\beautySalon\\salon-admin\\src\\views\\quillEditor.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\aa-tong\\my-projects\\beautySalon\\salon-admin\\src\\views\\quillEditor.vue","mtime":1605678320771},{"path":"D:\\aa-tong\\my-projects\\beautySalon\\salon-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\aa-tong\\my-projects\\beautySalon\\salon-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\aa-tong\\my-projects\\beautySalon\\salon-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\aa-tong\\my-projects\\beautySalon\\salon-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2YiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5qb2luIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3RvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0IjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0ICogYXMgUXVpbGwgZnJvbSAncXVpbGwnOyAvLyDlvJXlhaXnvJbovpHlmagKCnZhciBTVEFUSUNET01BSU4gPSAnLy9zcy55aWRlamlhLmNvbS8nOwp2YXIgU1RBVFZJREVPID0gJy8vZmx2LnlpZGVqaWEuY29tLyc7CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY29udGVudDogJycsCiAgICAgIC8vIOaWh+eroOWGheWuuQogICAgICBlZGl0b3JPcHRpb246IHt9LAogICAgICAvLyDnvJbovpHlmajpgInpobkKICAgICAgYWRkUmFuZ2U6IG5ldyBBcnJheSgpLAogICAgICB1cGxvYWREYXRhOiB7fSwKICAgICAgcGhvdG9Vcmw6ICcnLAogICAgICAvLyDkuIrkvKDlm77niYflnLDlnYAKICAgICAgdXBsb2FkVHlwZTogJycsCiAgICAgIC8vIOS4iuS8oOeahOaWh+S7tuexu+Wei++8iOWbvueJh+OAgeinhumike+8iQogICAgICBmdWxsc2NyZWVuTG9hZGluZzogZmFsc2UKICAgIH07CiAgfSwKICAvLyDpobXpnaLliqDovb3lkI7miafooYwg5Li657yW6L6R5Zmo55qE5Zu+54mH5Zu+5qCH5ZKM6KeG6aKR5Zu+5qCH57uR5a6a54K55Ye75LqL5Lu2CiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIC8vIOS4uuWbvueJh0lDT07nu5Hlrprkuovku7YgIGdldE1vZHVsZSDkuLrnvJbovpHlmajnmoTlhoXpg6jlsZ7mgKcKICAgIGNvbnNvbGUubG9nKHRoaXMuJHJlZnMubXlRdWlsbEVkaXRvci5xdWlsbC5nZXRNb2R1bGUoJ3Rvb2xiYXInKSk7CiAgICB0aGlzLiRyZWZzLm15UXVpbGxFZGl0b3IucXVpbGwuZ2V0TW9kdWxlKCd0b29sYmFyJykuYWRkSGFuZGxlcignaW1hZ2UnLCB0aGlzLmltZ0hhbmRsZXIpOwogICAgdGhpcy4kcmVmcy5teVF1aWxsRWRpdG9yLnF1aWxsLmdldE1vZHVsZSgndG9vbGJhcicpLmFkZEhhbmRsZXIoJ3ZpZGVvJywgdGhpcy52aWRlb0hhbmRsZXIpOyAvLyDkuLrop4bpopFJQ09O57uR5a6a5LqL5Lu2CiAgfSwKICBtZXRob2RzOiB7CiAgICBub3dMZW5ndGg6IGZ1bmN0aW9uIG5vd0xlbmd0aCgpIHsKICAgICAgcmV0dXJuIHRoaXMuY29udGVudC5sZW5ndGg7CiAgICB9LAogICAgU3VycGx1c0xlbmd0aDogZnVuY3Rpb24gU3VycGx1c0xlbmd0aCgpIHsKICAgICAgLy8g6K6h566X5bGe5oCnIOiOt+W+l+W9k+WJjei+k+WFpeWtl+espumVv+W6pgogICAgICB2YXIgbnVtID0gMTAwMDAgLSBOdW1iZXIodGhpcy5jb250ZW50Lmxlbmd0aCk7CgogICAgICBpZiAobnVtID4gMCkgewogICAgICAgIHJldHVybiBudW07CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIDA7CiAgICAgIH0KICAgIH0sCiAgICAvLyDlm77niYfkuIrkvKDliY3ojrflvpfmlbDmja50b2tlbuaVsOaNrgogICAgcW5VcGxvYWQ6IGZ1bmN0aW9uIHFuVXBsb2FkKGZpbGUpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHRoaXMuZnVsbHNjcmVlbkxvYWRpbmcgPSB0cnVlOwogICAgICB2YXIgc3VmZml4ID0gZmlsZS5uYW1lLnNwbGl0KCcuJyk7CiAgICAgIHZhciBleHQgPSBzdWZmaXguc3BsaWNlKHN1ZmZpeC5sZW5ndGggLSAxLCAxKVswXTsKICAgICAgY29uc29sZS5sb2codGhpcy51cGxvYWRUeXBlKTsKICAgICAgY29uc29sZS5sb2codGhpcy5hcGkpOwoKICAgICAgaWYgKHRoaXMudXBsb2FkVHlwZSA9PT0gJ2ltYWdlJykgewogICAgICAgIC8vIOWmguaenOaYr+eCueWHu+aPkuWFpeWbvueJhwogICAgICAgIHJldHVybiB0aGlzLmFwaS5nZXRRTlRva2VuKCkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICBfdGhpcy51cGxvYWREYXRhID0gewogICAgICAgICAgICBrZXk6ICJpbWFnZS8iLmNvbmNhdChzdWZmaXguam9pbignLicpLCAiXyIpLmNvbmNhdChuZXcgRGF0ZSgpLmdldFRpbWUoKSwgIi4iKS5jb25jYXQoZXh0KSwKICAgICAgICAgICAgdG9rZW46IHJlcwogICAgICAgICAgfTsKICAgICAgICB9KTsKICAgICAgfSBlbHNlIGlmICh0aGlzLnVwbG9hZFR5cGUgPT09ICd2aWRlbycpIHsKICAgICAgICAvLyDlpoLmnpzmmK/ngrnlh7vmj5LlhaXop4bpopEKICAgICAgICByZXR1cm4gdGhpcy5hcGkuZ2V0VmlkZW9RTlRva2VuKCkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICBfdGhpcy51cGxvYWREYXRhID0gewogICAgICAgICAgICBrZXk6ICJ2aWRlby8iLmNvbmNhdChzdWZmaXguam9pbignLicpLCAiXyIpLmNvbmNhdChuZXcgRGF0ZSgpLmdldFRpbWUoKSwgIi4iKS5jb25jYXQoZXh0KSwKICAgICAgICAgICAgdG9rZW46IHJlcwogICAgICAgICAgfTsKICAgICAgICB9KTsKICAgICAgfQogICAgfSwKICAgIC8vIOWbvueJh+S4iuS8oOS5i+WJjeiwg+WPlueahOWHveaVsAogICAgYmVmb3JlVXBsb2FkOiBmdW5jdGlvbiBiZWZvcmVVcGxvYWQoZmlsZSkgewogICAgICByZXR1cm4gdGhpcy5xblVwbG9hZChmaWxlKTsKICAgIH0sCiAgICAvLyDlm77niYfkuIrkvKDmiJDlip/lm57osIMgICDmj5LlhaXliLDnvJbovpHlmajkuK0KICAgIHVwU2N1Y2Nlc3M6IGZ1bmN0aW9uIHVwU2N1Y2Nlc3MoZSwgZmlsZSwgZmlsZUxpc3QpIHsKICAgICAgY29uc29sZS5sb2coJzk5OTk5OTknKTsKICAgICAgdGhpcy5mdWxsc2NyZWVuTG9hZGluZyA9IGZhbHNlOwogICAgICB2YXIgdm0gPSB0aGlzOwogICAgICB2YXIgdXJsID0gJyc7CgogICAgICBpZiAodGhpcy51cGxvYWRUeXBlID09PSAnaW1hZ2UnKSB7CiAgICAgICAgLy8g6I635b6X5paH5Lu25LiK5Lyg5ZCO55qEVVJM5Zyw5Z2ACiAgICAgICAgdXJsID0gU1RBVElDRE9NQUlOICsgZS5rZXk7CiAgICAgIH0gZWxzZSBpZiAodGhpcy51cGxvYWRUeXBlID09PSAndmlkZW8nKSB7CiAgICAgICAgdXJsID0gU1RBVFZJREVPICsgZS5rZXk7CiAgICAgIH0KCiAgICAgIGlmICh1cmwgIT0gbnVsbCAmJiB1cmwubGVuZ3RoID4gMCkgewogICAgICAgIC8vIOWwhuaWh+S7tuS4iuS8oOWQjueahFVSTOWcsOWdgOaPkuWFpeWIsOe8lui+keWZqOaWh+acrOS4rQogICAgICAgIHZhciB2YWx1ZSA9IHVybDsKICAgICAgICB2bS5hZGRSYW5nZSA9IHZtLiRyZWZzLm15UXVpbGxFZGl0b3IucXVpbGwuZ2V0U2VsZWN0aW9uKCk7CiAgICAgICAgdmFsdWUgPSB2YWx1ZS5pbmRleE9mKCdodHRwJykgIT09IC0xID8gdmFsdWUgOiAnaHR0cDonICsgdmFsdWU7CiAgICAgICAgdm0uJHJlZnMubXlRdWlsbEVkaXRvci5xdWlsbC5pbnNlcnRFbWJlZCh2bS5hZGRSYW5nZSAhPT0gbnVsbCA/IHZtLmFkZFJhbmdlLmluZGV4IDogMCwgdm0udXBsb2FkVHlwZSwgdmFsdWUsIFF1aWxsLnNvdXJjZXMuVVNFUik7IC8vIOiwg+eUqOe8lui+keWZqOeahCBpbnNlcnRFbWJlZCDmlrnms5XvvIzmj5LlhaVVUkwKCiAgICAgICAgY29uc29sZS5sb2codXJsKTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCIiLmNvbmNhdCh2bS51cGxvYWRUeXBlLCAiXHU2M0QyXHU1MTY1XHU1OTMxXHU4RDI1IikpOwogICAgICB9CgogICAgICB0aGlzLiRyZWZzWyd1cGxvYWQnXS5jbGVhckZpbGVzKCk7IC8vIOaPkuWFpeaIkOWKn+WQjua4hemZpGlucHV055qE5YaF5a65CiAgICB9LAogICAgLy8g54K55Ye75Zu+54mHSUNPTuinpuWPkeS6i+S7tgogICAgaW1nSGFuZGxlcjogZnVuY3Rpb24gaW1nSGFuZGxlcihzdGF0ZSkgewogICAgICB0aGlzLmFkZFJhbmdlID0gdGhpcy4kcmVmcy5teVF1aWxsRWRpdG9yLnF1aWxsLmdldFNlbGVjdGlvbigpOwoKICAgICAgaWYgKHN0YXRlKSB7CiAgICAgICAgdmFyIGZpbGVJbnB1dCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdpbWdJbnB1dCcpOwogICAgICAgIGZpbGVJbnB1dC5jbGljaygpOyAvLyDliqDkuIDkuKrop6blj5Hkuovku7YKICAgICAgfQoKICAgICAgdGhpcy51cGxvYWRUeXBlID0gJ2ltYWdlJzsKICAgIH0sCiAgICAvLyDngrnlh7vop4bpopFJQ09O6Kem5Y+R5LqL5Lu2CiAgICB2aWRlb0hhbmRsZXI6IGZ1bmN0aW9uIHZpZGVvSGFuZGxlcihzdGF0ZSkgewogICAgICB0aGlzLmFkZFJhbmdlID0gdGhpcy4kcmVmcy5teVF1aWxsRWRpdG9yLnF1aWxsLmdldFNlbGVjdGlvbigpOwoKICAgICAgaWYgKHN0YXRlKSB7CiAgICAgICAgdmFyIGZpbGVJbnB1dCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdpbWdJbnB1dCcpOwogICAgICAgIGZpbGVJbnB1dC5jbGljaygpOyAvLyDliqDkuIDkuKrop6blj5Hkuovku7YKICAgICAgfQoKICAgICAgdGhpcy51cGxvYWRUeXBlID0gJ3ZpZGVvJzsKICAgIH0sCiAgICAvLyDnvJbovpHlmajlhYnmoIfnprvlvIAg5bCG57yW6L6R5Zmo5YaF5a655Y+R5bCE57uZ54i257uE5Lu2CiAgICBvbkVkaXRvckJsdXI6IGZ1bmN0aW9uIG9uRWRpdG9yQmx1cihlZGl0b3IpIHsKICAgICAgdGhpcy4kZW1pdCgnZ2V0VmFsdWUnLCB0aGlzLmNvbnRlbnQpOwogICAgfSwKICAgIC8vIOe8lui+keWZqOiOt+W+l+WFieaghwogICAgb25FZGl0b3JGb2N1czogZnVuY3Rpb24gb25FZGl0b3JGb2N1cyhlZGl0b3IpIHsKICAgICAgZWRpdG9yLmVuYWJsZSh0cnVlKTsgLy8g5a6e546w6L6+5Yiw5LiK6ZmQ5a2X56ym5Y+v5Yig6ZmkCiAgICB9LAogICAgLy8g57yW6L6R5Zmo5paH5pys5Y+R55Sf5Y+Y5YyWCiAgICBvbkVkaXRvckNoYW5nZTogZnVuY3Rpb24gb25FZGl0b3JDaGFuZ2UoX3JlZikgewogICAgICB2YXIgZWRpdG9yID0gX3JlZi5lZGl0b3IsCiAgICAgICAgICBodG1sID0gX3JlZi5odG1sLAogICAgICAgICAgdGV4dCA9IF9yZWYudGV4dDsKICAgICAgdmFyIHRleHRMZW5ndGggPSB0ZXh0Lmxlbmd0aDsKCiAgICAgIGlmICh0ZXh0TGVuZ3RoID4gMTAwMDApIHsKICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCfmnIDlpJrovpPlhaUxMDAwMOS4quWtl+espicpOwogICAgICAgIGVkaXRvci5lbmFibGUoZmFsc2UpOwogICAgICB9CgogICAgICB0aGlzLiRlbWl0KCdnZXRWYWx1ZScsIHRoaXMuY29udGVudCk7CiAgICB9LAogICAgLy8g5riF6Zmk57yW6L6R5Zmo5YaF5a65CiAgICBjYWxsTWV0aG9kOiBmdW5jdGlvbiBjYWxsTWV0aG9kKCkgewogICAgICB0aGlzLmNvbnRlbnQgPSAnJzsKICAgIH0KICB9Cn07"},{"version":3,"sources":["quillEditor.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <!-- quill-editor插件标签 分别绑定各个事件-->\r\n    <quill-editor v-model=\"content\" ref=\"myQuillEditor\" :options=\"editorOption\" @blur=\"onEditorBlur($event)\"\r\n      @focus=\"onEditorFocus($event)\" @change=\"onEditorChange($event)\">\r\n    </quill-editor>\r\n    <div class=\"limit\">当前已输入 <span>{{nowLength()}}</span> 个字符，您还可以输入 <span>{{SurplusLength()}}</span> 个字符。</div>\r\n    <!-- 文件上传input 将它隐藏-->\r\n    <el-upload class=\"upload-demo\" action=\"http://192.168.0.118/app/watchex/imgrecv?java\" :before-upload='beforeUpload'\r\n      :data=\"uploadData\" :on-success='upScuccess' ref=\"upload\" style=\"display:block\">\r\n      <el-button size=\"small\" type=\"primary\" id=\"imgInput\" :loading=\"fullscreenLoading\" element-loading-text=\"插入中,请稍候\">\r\n        点击上传</el-button>\r\n    </el-upload>\r\n  </div>\r\n</template>\r\n<script>\r\n  import * as Quill from 'quill' // 引入编辑器\r\n\r\n  const STATICDOMAIN = '//ss.yidejia.com/'\r\n  const STATVIDEO = '//flv.yidejia.com/'\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        content: '', // 文章内容\r\n        editorOption: {}, // 编辑器选项\r\n        addRange: new Array(),\r\n        uploadData: {},\r\n        photoUrl: '', // 上传图片地址\r\n        uploadType: '', // 上传的文件类型（图片、视频）\r\n        fullscreenLoading: false\r\n      }\r\n    },\r\n    // 页面加载后执行 为编辑器的图片图标和视频图标绑定点击事件\r\n    mounted() {\r\n      // 为图片ICON绑定事件  getModule 为编辑器的内部属性\r\n      console.log(this.$refs.myQuillEditor.quill.getModule('toolbar'));\r\n      this.$refs.myQuillEditor.quill.getModule('toolbar').addHandler('image', this.imgHandler)\r\n      this.$refs.myQuillEditor.quill.getModule('toolbar').addHandler('video', this.videoHandler) // 为视频ICON绑定事件\r\n    },\r\n    methods: {\r\n      nowLength() {\r\n        return this.content.length\r\n      },\r\n\r\n      SurplusLength() { // 计算属性 获得当前输入字符长度\r\n        let num = 10000 - Number(this.content.length)\r\n        if (num > 0) {\r\n          return num\r\n        } else {\r\n          return 0\r\n        }\r\n      },\r\n\r\n      // 图片上传前获得数据token数据\r\n      qnUpload(file) {\r\n        this.fullscreenLoading = true\r\n        const suffix = file.name.split('.')\r\n        const ext = suffix.splice(suffix.length - 1, 1)[0]\r\n        console.log(this.uploadType);\r\n        console.log(this.api);\r\n        if (this.uploadType === 'image') { // 如果是点击插入图片\r\n          return this.api.getQNToken().then(res => {\r\n            this.uploadData = {\r\n              key: `image/${suffix.join('.')}_${new Date().getTime()}.${ext}`,\r\n              token: res\r\n            }\r\n          })\r\n        } else if (this.uploadType === 'video') { // 如果是点击插入视频\r\n          return this.api.getVideoQNToken().then(res => {\r\n            this.uploadData = {\r\n              key: `video/${suffix.join('.')}_${new Date().getTime()}.${ext}`,\r\n              token: res\r\n            }\r\n          })\r\n        }\r\n      },\r\n\r\n      // 图片上传之前调取的函数\r\n      beforeUpload(file) {\r\n        return this.qnUpload(file)\r\n      },\r\n\r\n      // 图片上传成功回调   插入到编辑器中\r\n      upScuccess(e, file, fileList) {\r\n        console.log('9999999');\r\n        this.fullscreenLoading = false\r\n        let vm = this\r\n        let url = ''\r\n        if (this.uploadType === 'image') { // 获得文件上传后的URL地址\r\n          url = STATICDOMAIN + e.key\r\n        } else if (this.uploadType === 'video') {\r\n          url = STATVIDEO + e.key\r\n        }\r\n        if (url != null && url.length > 0) { // 将文件上传后的URL地址插入到编辑器文本中\r\n          let value = url\r\n          vm.addRange = vm.$refs.myQuillEditor.quill.getSelection()\r\n          value = value.indexOf('http') !== -1 ? value : 'http:' + value\r\n          vm.$refs.myQuillEditor.quill.insertEmbed(vm.addRange !== null ? vm.addRange.index : 0, vm.uploadType, value,\r\n            Quill.sources.USER) // 调用编辑器的 insertEmbed 方法，插入URL\r\n          console.log(url);\r\n        } else {\r\n          this.$message.error(`${vm.uploadType}插入失败`)\r\n        }\r\n        this.$refs['upload'].clearFiles() // 插入成功后清除input的内容\r\n      },\r\n\r\n      // 点击图片ICON触发事件\r\n      imgHandler(state) {\r\n        this.addRange = this.$refs.myQuillEditor.quill.getSelection()\r\n        if (state) {\r\n          let fileInput = document.getElementById('imgInput')\r\n          fileInput.click() // 加一个触发事件\r\n        }\r\n        this.uploadType = 'image'\r\n      },\r\n\r\n      // 点击视频ICON触发事件\r\n      videoHandler(state) {\r\n        this.addRange = this.$refs.myQuillEditor.quill.getSelection()\r\n        if (state) {\r\n          let fileInput = document.getElementById('imgInput')\r\n          fileInput.click() // 加一个触发事件\r\n        }\r\n        this.uploadType = 'video'\r\n      },\r\n\r\n      // 编辑器光标离开 将编辑器内容发射给父组件\r\n      onEditorBlur(editor) {\r\n        this.$emit('getValue', this.content)\r\n      },\r\n\r\n      // 编辑器获得光标\r\n      onEditorFocus(editor) {\r\n        editor.enable(true) // 实现达到上限字符可删除\r\n      },\r\n\r\n      // 编辑器文本发生变化\r\n      onEditorChange({\r\n        editor,\r\n        html,\r\n        text\r\n      }) {\r\n        let textLength = text.length\r\n        if (textLength > 10000) {\r\n          this.$message.error('最多输入10000个字符')\r\n          editor.enable(false)\r\n        }\r\n        this.$emit('getValue', this.content)\r\n      },\r\n\r\n      // 清除编辑器内容\r\n      callMethod() {\r\n        this.content = ''\r\n      },\r\n    },\r\n  }\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n  .quill-editor {\r\n    height: 745px;\r\n\r\n    .ql-container {\r\n      height: 680px;\r\n    }\r\n  }\r\n\r\n  .limit {\r\n    height: 30px;\r\n    border: 1px solid #ccc;\r\n    line-height: 30px;\r\n    text-align: right;\r\n\r\n    span {\r\n      color: #ee2a7b;\r\n    }\r\n  }\r\n\r\n  .ql-snow .ql-editor img {\r\n    max-width: 480px;\r\n  }\r\n\r\n  .ql-editor .ql-video {\r\n    max-width: 480px;\r\n  }\r\n</style>"],"sourceRoot":"src/views"}]}