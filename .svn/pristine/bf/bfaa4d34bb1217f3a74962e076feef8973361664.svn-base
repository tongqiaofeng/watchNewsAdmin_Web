{"remainingRequest":"D:\\aa-tong\\my-projects\\beautySalon\\salon-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\aa-tong\\my-projects\\beautySalon\\salon-admin\\src\\views\\quillEditor.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\aa-tong\\my-projects\\beautySalon\\salon-admin\\src\\views\\quillEditor.vue","mtime":1605678320771},{"path":"D:\\aa-tong\\my-projects\\beautySalon\\salon-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\aa-tong\\my-projects\\beautySalon\\salon-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\aa-tong\\my-projects\\beautySalon\\salon-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\aa-tong\\my-projects\\beautySalon\\salon-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCAqIGFzIFF1aWxsIGZyb20gJ3F1aWxsJyAvLyDlvJXlhaXnvJbovpHlmagKCmNvbnN0IFNUQVRJQ0RPTUFJTiA9ICcvL3NzLnlpZGVqaWEuY29tLycKY29uc3QgU1RBVFZJREVPID0gJy8vZmx2LnlpZGVqaWEuY29tLycKCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY29udGVudDogJycsIC8vIOaWh+eroOWGheWuuQogICAgICBlZGl0b3JPcHRpb246IHt9LCAvLyDnvJbovpHlmajpgInpobkKICAgICAgYWRkUmFuZ2U6IG5ldyBBcnJheSgpLAogICAgICB1cGxvYWREYXRhOiB7fSwKICAgICAgcGhvdG9Vcmw6ICcnLCAvLyDkuIrkvKDlm77niYflnLDlnYAKICAgICAgdXBsb2FkVHlwZTogJycsIC8vIOS4iuS8oOeahOaWh+S7tuexu+Wei++8iOWbvueJh+OAgeinhumike+8iQogICAgICBmdWxsc2NyZWVuTG9hZGluZzogZmFsc2UKICAgIH0KICB9LAogIC8vIOmhtemdouWKoOi9veWQjuaJp+ihjCDkuLrnvJbovpHlmajnmoTlm77niYflm77moIflkozop4bpopHlm77moIfnu5Hlrprngrnlh7vkuovku7YKICBtb3VudGVkKCkgewogICAgLy8g5Li65Zu+54mHSUNPTue7keWumuS6i+S7tiAgZ2V0TW9kdWxlIOS4uue8lui+keWZqOeahOWGhemDqOWxnuaApwogICAgY29uc29sZS5sb2codGhpcy4kcmVmcy5teVF1aWxsRWRpdG9yLnF1aWxsLmdldE1vZHVsZSgndG9vbGJhcicpKTsKICAgIHRoaXMuJHJlZnMubXlRdWlsbEVkaXRvci5xdWlsbC5nZXRNb2R1bGUoJ3Rvb2xiYXInKS5hZGRIYW5kbGVyKCdpbWFnZScsIHRoaXMuaW1nSGFuZGxlcikKICAgIHRoaXMuJHJlZnMubXlRdWlsbEVkaXRvci5xdWlsbC5nZXRNb2R1bGUoJ3Rvb2xiYXInKS5hZGRIYW5kbGVyKCd2aWRlbycsIHRoaXMudmlkZW9IYW5kbGVyKSAvLyDkuLrop4bpopFJQ09O57uR5a6a5LqL5Lu2CiAgfSwKICBtZXRob2RzOiB7CiAgICBub3dMZW5ndGgoKSB7CiAgICAgIHJldHVybiB0aGlzLmNvbnRlbnQubGVuZ3RoCiAgICB9LAoKICAgIFN1cnBsdXNMZW5ndGgoKSB7IC8vIOiuoeeul+WxnuaApyDojrflvpflvZPliY3ovpPlhaXlrZfnrKbplb/luqYKICAgICAgbGV0IG51bSA9IDEwMDAwIC0gTnVtYmVyKHRoaXMuY29udGVudC5sZW5ndGgpCiAgICAgIGlmIChudW0gPiAwKSB7CiAgICAgICAgcmV0dXJuIG51bQogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiAwCiAgICAgIH0KICAgIH0sCgogICAgLy8g5Zu+54mH5LiK5Lyg5YmN6I635b6X5pWw5o2udG9rZW7mlbDmja4KICAgIHFuVXBsb2FkKGZpbGUpIHsKICAgICAgdGhpcy5mdWxsc2NyZWVuTG9hZGluZyA9IHRydWUKICAgICAgY29uc3Qgc3VmZml4ID0gZmlsZS5uYW1lLnNwbGl0KCcuJykKICAgICAgY29uc3QgZXh0ID0gc3VmZml4LnNwbGljZShzdWZmaXgubGVuZ3RoIC0gMSwgMSlbMF0KICAgICAgY29uc29sZS5sb2codGhpcy51cGxvYWRUeXBlKTsKICAgICAgY29uc29sZS5sb2codGhpcy5hcGkpOwogICAgICBpZiAodGhpcy51cGxvYWRUeXBlID09PSAnaW1hZ2UnKSB7IC8vIOWmguaenOaYr+eCueWHu+aPkuWFpeWbvueJhwogICAgICAgIHJldHVybiB0aGlzLmFwaS5nZXRRTlRva2VuKCkudGhlbihyZXMgPT4gewogICAgICAgICAgdGhpcy51cGxvYWREYXRhID0gewogICAgICAgICAgICBrZXk6IGBpbWFnZS8ke3N1ZmZpeC5qb2luKCcuJyl9XyR7bmV3IERhdGUoKS5nZXRUaW1lKCl9LiR7ZXh0fWAsCiAgICAgICAgICAgIHRva2VuOiByZXMKICAgICAgICAgIH0KICAgICAgICB9KQogICAgICB9IGVsc2UgaWYgKHRoaXMudXBsb2FkVHlwZSA9PT0gJ3ZpZGVvJykgeyAvLyDlpoLmnpzmmK/ngrnlh7vmj5LlhaXop4bpopEKICAgICAgICByZXR1cm4gdGhpcy5hcGkuZ2V0VmlkZW9RTlRva2VuKCkudGhlbihyZXMgPT4gewogICAgICAgICAgdGhpcy51cGxvYWREYXRhID0gewogICAgICAgICAgICBrZXk6IGB2aWRlby8ke3N1ZmZpeC5qb2luKCcuJyl9XyR7bmV3IERhdGUoKS5nZXRUaW1lKCl9LiR7ZXh0fWAsCiAgICAgICAgICAgIHRva2VuOiByZXMKICAgICAgICAgIH0KICAgICAgICB9KQogICAgICB9CiAgICB9LAoKICAgIC8vIOWbvueJh+S4iuS8oOS5i+WJjeiwg+WPlueahOWHveaVsAogICAgYmVmb3JlVXBsb2FkKGZpbGUpIHsKICAgICAgcmV0dXJuIHRoaXMucW5VcGxvYWQoZmlsZSkKICAgIH0sCgogICAgLy8g5Zu+54mH5LiK5Lyg5oiQ5Yqf5Zue6LCDICAg5o+S5YWl5Yiw57yW6L6R5Zmo5LitCiAgICB1cFNjdWNjZXNzKGUsIGZpbGUsIGZpbGVMaXN0KSB7CiAgICAgIGNvbnNvbGUubG9nKCc5OTk5OTk5Jyk7CiAgICAgIHRoaXMuZnVsbHNjcmVlbkxvYWRpbmcgPSBmYWxzZQogICAgICBsZXQgdm0gPSB0aGlzCiAgICAgIGxldCB1cmwgPSAnJwogICAgICBpZiAodGhpcy51cGxvYWRUeXBlID09PSAnaW1hZ2UnKSB7IC8vIOiOt+W+l+aWh+S7tuS4iuS8oOWQjueahFVSTOWcsOWdgAogICAgICAgIHVybCA9IFNUQVRJQ0RPTUFJTiArIGUua2V5CiAgICAgIH0gZWxzZSBpZiAodGhpcy51cGxvYWRUeXBlID09PSAndmlkZW8nKSB7CiAgICAgICAgdXJsID0gU1RBVFZJREVPICsgZS5rZXkKICAgICAgfQogICAgICBpZiAodXJsICE9IG51bGwgJiYgdXJsLmxlbmd0aCA+IDApIHsgLy8g5bCG5paH5Lu25LiK5Lyg5ZCO55qEVVJM5Zyw5Z2A5o+S5YWl5Yiw57yW6L6R5Zmo5paH5pys5LitCiAgICAgICAgbGV0IHZhbHVlID0gdXJsCiAgICAgICAgdm0uYWRkUmFuZ2UgPSB2bS4kcmVmcy5teVF1aWxsRWRpdG9yLnF1aWxsLmdldFNlbGVjdGlvbigpCiAgICAgICAgdmFsdWUgPSB2YWx1ZS5pbmRleE9mKCdodHRwJykgIT09IC0xID8gdmFsdWUgOiAnaHR0cDonICsgdmFsdWUKICAgICAgICB2bS4kcmVmcy5teVF1aWxsRWRpdG9yLnF1aWxsLmluc2VydEVtYmVkKHZtLmFkZFJhbmdlICE9PSBudWxsID8gdm0uYWRkUmFuZ2UuaW5kZXggOiAwLCB2bS51cGxvYWRUeXBlLCB2YWx1ZSwKICAgICAgICAgIFF1aWxsLnNvdXJjZXMuVVNFUikgLy8g6LCD55So57yW6L6R5Zmo55qEIGluc2VydEVtYmVkIOaWueazle+8jOaPkuWFpVVSTAogICAgICAgIGNvbnNvbGUubG9nKHVybCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcihgJHt2bS51cGxvYWRUeXBlfeaPkuWFpeWksei0pWApCiAgICAgIH0KICAgICAgdGhpcy4kcmVmc1sndXBsb2FkJ10uY2xlYXJGaWxlcygpIC8vIOaPkuWFpeaIkOWKn+WQjua4hemZpGlucHV055qE5YaF5a65CiAgICB9LAoKICAgIC8vIOeCueWHu+WbvueJh0lDT07op6blj5Hkuovku7YKICAgIGltZ0hhbmRsZXIoc3RhdGUpIHsKICAgICAgdGhpcy5hZGRSYW5nZSA9IHRoaXMuJHJlZnMubXlRdWlsbEVkaXRvci5xdWlsbC5nZXRTZWxlY3Rpb24oKQogICAgICBpZiAoc3RhdGUpIHsKICAgICAgICBsZXQgZmlsZUlucHV0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2ltZ0lucHV0JykKICAgICAgICBmaWxlSW5wdXQuY2xpY2soKSAvLyDliqDkuIDkuKrop6blj5Hkuovku7YKICAgICAgfQogICAgICB0aGlzLnVwbG9hZFR5cGUgPSAnaW1hZ2UnCiAgICB9LAoKICAgIC8vIOeCueWHu+inhumikUlDT07op6blj5Hkuovku7YKICAgIHZpZGVvSGFuZGxlcihzdGF0ZSkgewogICAgICB0aGlzLmFkZFJhbmdlID0gdGhpcy4kcmVmcy5teVF1aWxsRWRpdG9yLnF1aWxsLmdldFNlbGVjdGlvbigpCiAgICAgIGlmIChzdGF0ZSkgewogICAgICAgIGxldCBmaWxlSW5wdXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaW1nSW5wdXQnKQogICAgICAgIGZpbGVJbnB1dC5jbGljaygpIC8vIOWKoOS4gOS4quinpuWPkeS6i+S7tgogICAgICB9CiAgICAgIHRoaXMudXBsb2FkVHlwZSA9ICd2aWRlbycKICAgIH0sCgogICAgLy8g57yW6L6R5Zmo5YWJ5qCH56a75byAIOWwhue8lui+keWZqOWGheWuueWPkeWwhOe7meeItue7hOS7tgogICAgb25FZGl0b3JCbHVyKGVkaXRvcikgewogICAgICB0aGlzLiRlbWl0KCdnZXRWYWx1ZScsIHRoaXMuY29udGVudCkKICAgIH0sCgogICAgLy8g57yW6L6R5Zmo6I635b6X5YWJ5qCHCiAgICBvbkVkaXRvckZvY3VzKGVkaXRvcikgewogICAgICBlZGl0b3IuZW5hYmxlKHRydWUpIC8vIOWunueOsOi+vuWIsOS4iumZkOWtl+espuWPr+WIoOmZpAogICAgfSwKCiAgICAvLyDnvJbovpHlmajmlofmnKzlj5HnlJ/lj5jljJYKICAgIG9uRWRpdG9yQ2hhbmdlKHsKICAgICAgZWRpdG9yLAogICAgICBodG1sLAogICAgICB0ZXh0CiAgICB9KSB7CiAgICAgIGxldCB0ZXh0TGVuZ3RoID0gdGV4dC5sZW5ndGgKICAgICAgaWYgKHRleHRMZW5ndGggPiAxMDAwMCkgewogICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+acgOWkmui+k+WFpTEwMDAw5Liq5a2X56ymJykKICAgICAgICBlZGl0b3IuZW5hYmxlKGZhbHNlKQogICAgICB9CiAgICAgIHRoaXMuJGVtaXQoJ2dldFZhbHVlJywgdGhpcy5jb250ZW50KQogICAgfSwKCiAgICAvLyDmuIXpmaTnvJbovpHlmajlhoXlrrkKICAgIGNhbGxNZXRob2QoKSB7CiAgICAgIHRoaXMuY29udGVudCA9ICcnCiAgICB9LAogIH0sCn0K"},{"version":3,"sources":["quillEditor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"quillEditor.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div>\r\n    <!-- quill-editor插件标签 分别绑定各个事件-->\r\n    <quill-editor v-model=\"content\" ref=\"myQuillEditor\" :options=\"editorOption\" @blur=\"onEditorBlur($event)\"\r\n      @focus=\"onEditorFocus($event)\" @change=\"onEditorChange($event)\">\r\n    </quill-editor>\r\n    <div class=\"limit\">当前已输入 <span>{{nowLength()}}</span> 个字符，您还可以输入 <span>{{SurplusLength()}}</span> 个字符。</div>\r\n    <!-- 文件上传input 将它隐藏-->\r\n    <el-upload class=\"upload-demo\" action=\"http://192.168.0.118/app/watchex/imgrecv?java\" :before-upload='beforeUpload'\r\n      :data=\"uploadData\" :on-success='upScuccess' ref=\"upload\" style=\"display:block\">\r\n      <el-button size=\"small\" type=\"primary\" id=\"imgInput\" :loading=\"fullscreenLoading\" element-loading-text=\"插入中,请稍候\">\r\n        点击上传</el-button>\r\n    </el-upload>\r\n  </div>\r\n</template>\r\n<script>\r\n  import * as Quill from 'quill' // 引入编辑器\r\n\r\n  const STATICDOMAIN = '//ss.yidejia.com/'\r\n  const STATVIDEO = '//flv.yidejia.com/'\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        content: '', // 文章内容\r\n        editorOption: {}, // 编辑器选项\r\n        addRange: new Array(),\r\n        uploadData: {},\r\n        photoUrl: '', // 上传图片地址\r\n        uploadType: '', // 上传的文件类型（图片、视频）\r\n        fullscreenLoading: false\r\n      }\r\n    },\r\n    // 页面加载后执行 为编辑器的图片图标和视频图标绑定点击事件\r\n    mounted() {\r\n      // 为图片ICON绑定事件  getModule 为编辑器的内部属性\r\n      console.log(this.$refs.myQuillEditor.quill.getModule('toolbar'));\r\n      this.$refs.myQuillEditor.quill.getModule('toolbar').addHandler('image', this.imgHandler)\r\n      this.$refs.myQuillEditor.quill.getModule('toolbar').addHandler('video', this.videoHandler) // 为视频ICON绑定事件\r\n    },\r\n    methods: {\r\n      nowLength() {\r\n        return this.content.length\r\n      },\r\n\r\n      SurplusLength() { // 计算属性 获得当前输入字符长度\r\n        let num = 10000 - Number(this.content.length)\r\n        if (num > 0) {\r\n          return num\r\n        } else {\r\n          return 0\r\n        }\r\n      },\r\n\r\n      // 图片上传前获得数据token数据\r\n      qnUpload(file) {\r\n        this.fullscreenLoading = true\r\n        const suffix = file.name.split('.')\r\n        const ext = suffix.splice(suffix.length - 1, 1)[0]\r\n        console.log(this.uploadType);\r\n        console.log(this.api);\r\n        if (this.uploadType === 'image') { // 如果是点击插入图片\r\n          return this.api.getQNToken().then(res => {\r\n            this.uploadData = {\r\n              key: `image/${suffix.join('.')}_${new Date().getTime()}.${ext}`,\r\n              token: res\r\n            }\r\n          })\r\n        } else if (this.uploadType === 'video') { // 如果是点击插入视频\r\n          return this.api.getVideoQNToken().then(res => {\r\n            this.uploadData = {\r\n              key: `video/${suffix.join('.')}_${new Date().getTime()}.${ext}`,\r\n              token: res\r\n            }\r\n          })\r\n        }\r\n      },\r\n\r\n      // 图片上传之前调取的函数\r\n      beforeUpload(file) {\r\n        return this.qnUpload(file)\r\n      },\r\n\r\n      // 图片上传成功回调   插入到编辑器中\r\n      upScuccess(e, file, fileList) {\r\n        console.log('9999999');\r\n        this.fullscreenLoading = false\r\n        let vm = this\r\n        let url = ''\r\n        if (this.uploadType === 'image') { // 获得文件上传后的URL地址\r\n          url = STATICDOMAIN + e.key\r\n        } else if (this.uploadType === 'video') {\r\n          url = STATVIDEO + e.key\r\n        }\r\n        if (url != null && url.length > 0) { // 将文件上传后的URL地址插入到编辑器文本中\r\n          let value = url\r\n          vm.addRange = vm.$refs.myQuillEditor.quill.getSelection()\r\n          value = value.indexOf('http') !== -1 ? value : 'http:' + value\r\n          vm.$refs.myQuillEditor.quill.insertEmbed(vm.addRange !== null ? vm.addRange.index : 0, vm.uploadType, value,\r\n            Quill.sources.USER) // 调用编辑器的 insertEmbed 方法，插入URL\r\n          console.log(url);\r\n        } else {\r\n          this.$message.error(`${vm.uploadType}插入失败`)\r\n        }\r\n        this.$refs['upload'].clearFiles() // 插入成功后清除input的内容\r\n      },\r\n\r\n      // 点击图片ICON触发事件\r\n      imgHandler(state) {\r\n        this.addRange = this.$refs.myQuillEditor.quill.getSelection()\r\n        if (state) {\r\n          let fileInput = document.getElementById('imgInput')\r\n          fileInput.click() // 加一个触发事件\r\n        }\r\n        this.uploadType = 'image'\r\n      },\r\n\r\n      // 点击视频ICON触发事件\r\n      videoHandler(state) {\r\n        this.addRange = this.$refs.myQuillEditor.quill.getSelection()\r\n        if (state) {\r\n          let fileInput = document.getElementById('imgInput')\r\n          fileInput.click() // 加一个触发事件\r\n        }\r\n        this.uploadType = 'video'\r\n      },\r\n\r\n      // 编辑器光标离开 将编辑器内容发射给父组件\r\n      onEditorBlur(editor) {\r\n        this.$emit('getValue', this.content)\r\n      },\r\n\r\n      // 编辑器获得光标\r\n      onEditorFocus(editor) {\r\n        editor.enable(true) // 实现达到上限字符可删除\r\n      },\r\n\r\n      // 编辑器文本发生变化\r\n      onEditorChange({\r\n        editor,\r\n        html,\r\n        text\r\n      }) {\r\n        let textLength = text.length\r\n        if (textLength > 10000) {\r\n          this.$message.error('最多输入10000个字符')\r\n          editor.enable(false)\r\n        }\r\n        this.$emit('getValue', this.content)\r\n      },\r\n\r\n      // 清除编辑器内容\r\n      callMethod() {\r\n        this.content = ''\r\n      },\r\n    },\r\n  }\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n  .quill-editor {\r\n    height: 745px;\r\n\r\n    .ql-container {\r\n      height: 680px;\r\n    }\r\n  }\r\n\r\n  .limit {\r\n    height: 30px;\r\n    border: 1px solid #ccc;\r\n    line-height: 30px;\r\n    text-align: right;\r\n\r\n    span {\r\n      color: #ee2a7b;\r\n    }\r\n  }\r\n\r\n  .ql-snow .ql-editor img {\r\n    max-width: 480px;\r\n  }\r\n\r\n  .ql-editor .ql-video {\r\n    max-width: 480px;\r\n  }\r\n</style>"]}]}