{"remainingRequest":"D:\\aa-tong\\my-projects\\article\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\aa-tong\\my-projects\\article\\src\\views\\addRelease.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\aa-tong\\my-projects\\article\\src\\views\\addRelease.vue","mtime":1605681448984},{"path":"D:\\aa-tong\\my-projects\\article\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\aa-tong\\my-projects\\article\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\aa-tong\\my-projects\\article\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\aa-tong\\my-projects\\article\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7CiAgcXVpbGxFZGl0b3IKfSBmcm9tICJ2dWUtcXVpbGwtZWRpdG9yIjsgLy/osIPnlKjnvJbovpHlmagKaW1wb3J0ICogYXMgUXVpbGwgZnJvbSAncXVpbGwnOwppbXBvcnQgJ3F1aWxsL2Rpc3QvcXVpbGwuY29yZS5jc3MnOwppbXBvcnQgJ3F1aWxsL2Rpc3QvcXVpbGwuc25vdy5jc3MnOwppbXBvcnQgJ3F1aWxsL2Rpc3QvcXVpbGwuYnViYmxlLmNzcyc7Ci8vIGltcG9ydCBJbWFnZVJlc2l6ZSBmcm9tICdxdWlsbC1pbWFnZS1yZXNpemUtbW9kdWxlJzsKaW1wb3J0IHsKICBhZGRRdWlsbFRpdGxlCn0gZnJvbSAnLi4vcXVpbGxfdGl0bGUnOwoKLy8gUXVpbGwucmVnaXN0ZXIoJ21vZHVsZXMvaW1hZ2VSZXNpemUnLCBJbWFnZVJlc2l6ZSkKbGV0IGZvbnRTaXplU3R5bGUgPSBRdWlsbC5pbXBvcnQoJ2F0dHJpYnV0b3JzL3N0eWxlL3NpemUnKQpmb250U2l6ZVN0eWxlLndoaXRlbGlzdCA9IFsnMTBweCcsICcxMnB4JywgJzE0cHgnLCAnMTZweCcsICcxOHB4JywgJzIwcHgnLCAnMjJweCcsICcyNHB4JywgJzI2cHgnLCAnMzJweCcsICc0OHB4J10KUXVpbGwucmVnaXN0ZXIoZm9udFNpemVTdHlsZSwgdHJ1ZSkKbGV0IGZvbnRzID0gW2ZhbHNlLCAnU2ltU3VuJywgJ1NpbUhlaScsICdNaWNyb3NvZnQtWWFIZWknLCAnS2FpVGknLCAnRmFuZ1NvbmcnLCAnQXJpYWwnLCAnc2Fucy1zZXJpZiddCmxldCBGb250ID0gUXVpbGwuaW1wb3J0KCdmb3JtYXRzL2ZvbnQnKQpGb250LndoaXRlbGlzdCA9IGZvbnRzIC8v5bCG5a2X5L2T5Yqg5YWl5Yiw55m95ZCN5Y2VClF1aWxsLnJlZ2lzdGVyKEZvbnQsIHRydWUpCgpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgcXVpbGxFZGl0b3IKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjb250ZW50OiAiIiwKICAgICAgc3RyOiAiIiwKICAgICAgZWRpdG9yT3B0aW9uOiB7CiAgICAgICAgcGxhY2Vob2xkZXI6ICLor7flnKjov5nph4zovpPlhaUiLAogICAgICAgIG1vZHVsZXM6IHsKICAgICAgICAgIHRvb2xiYXI6IHsKICAgICAgICAgICAgY29udGFpbmVyOiBbCiAgICAgICAgICAgICAgWydib2xkJywgJ2l0YWxpYycsICd1bmRlcmxpbmUnLCAnc3RyaWtlJ10sIC8v5Yqg57KX77yM5pac5L2T77yM5LiL5YiS57q/77yM5Yig6Zmk57q/CiAgICAgICAgICAgICAgWydibG9ja3F1b3RlJywgJ2NvZGUtYmxvY2snXSwgLy/lvJXnlKjvvIzku6PnoIHlnZcKICAgICAgICAgICAgICAvLyBbewogICAgICAgICAgICAgIC8vICAgJ2hlYWRlcic6IDEKICAgICAgICAgICAgICAvLyB9LCB7CiAgICAgICAgICAgICAgLy8gICAnaGVhZGVyJzogMgogICAgICAgICAgICAgIC8vIH1dLCAvLyDmoIfpopjvvIzplK7lgLzlr7nnmoTlvaLlvI/vvJsx44CBMuihqOekuuWtl+S9k+Wkp+WwjwogICAgICAgICAgICAgIFt7CiAgICAgICAgICAgICAgICAnbGlzdCc6ICdvcmRlcmVkJwogICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICdsaXN0JzogJ2J1bGxldCcKICAgICAgICAgICAgICB9XSwgLy/liJfooagKICAgICAgICAgICAgICBbewogICAgICAgICAgICAgICAgJ3NjcmlwdCc6ICdzdWInCiAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgJ3NjcmlwdCc6ICdzdXBlcicKICAgICAgICAgICAgICB9XSwgLy8g5LiK5LiL5qCHCiAgICAgICAgICAgICAgW3sKICAgICAgICAgICAgICAgICdpbmRlbnQnOiAnLTEnCiAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgJ2luZGVudCc6ICcrMScKICAgICAgICAgICAgICB9XSwgLy8g57yp6L+bCiAgICAgICAgICAgICAgW3sKICAgICAgICAgICAgICAgICdkaXJlY3Rpb24nOiAncnRsJwogICAgICAgICAgICAgIH1dLCAvLyDmlofmnKzmlrnlkJEKICAgICAgICAgICAgICBbewogICAgICAgICAgICAgICAgJ3NpemUnOiBmb250U2l6ZVN0eWxlLndoaXRlbGlzdAogICAgICAgICAgICAgIH1dLCAvLyDlrZfkvZPlpKflsI8KICAgICAgICAgICAgICBbewogICAgICAgICAgICAgICAgJ2hlYWRlcic6IFsxLCAyLCAzLCA0LCA1LCA2XQogICAgICAgICAgICAgIH1dLCAvL+WHoOe6p+agh+mimAogICAgICAgICAgICAgIFt7CiAgICAgICAgICAgICAgICAnY29sb3InOiBbXQogICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICdiYWNrZ3JvdW5kJzogW10KICAgICAgICAgICAgICB9XSwgLy8g5a2X5L2T6aKc6Imy77yM5a2X5L2T6IOM5pmv6aKc6ImyCiAgICAgICAgICAgICAgW3sKICAgICAgICAgICAgICAgICdmb250JzogZm9udHMKICAgICAgICAgICAgICB9XSwgLy/lrZfkvZMKICAgICAgICAgICAgICBbewogICAgICAgICAgICAgICAgJ2FsaWduJzogW10KICAgICAgICAgICAgICB9XSwgLy/lr7npvZDmlrnlvI8KICAgICAgICAgICAgICBbJ2NsZWFuJ10sIC8v5riF6Zmk5a2X5L2T5qC35byPCiAgICAgICAgICAgICAgWydpbWFnZScsICd2aWRlbyddIC8v5LiK5Lyg5Zu+54mH44CB5LiK5Lyg6KeG6aKRCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIGhhbmRsZXJzOiB7CiAgICAgICAgICAgICAgJ2ltYWdlJzogZnVuY3Rpb24gKHZhbHVlKSB7CiAgICAgICAgICAgICAgICBpZiAodmFsdWUpIHsKICAgICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2lucHV0X2hpZGUnKS5jbGljaygpCiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICB0aGlzLnF1aWxsLmZvcm1hdCgnaW1hZ2UnLCBmYWxzZSkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICd2aWRlbyc6IGZ1bmN0aW9uICh2YWx1ZSkgewogICAgICAgICAgICAgICAgaWYgKHZhbHVlKSB7CiAgICAgICAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNpbnB1dF9oaWRlJykuY2xpY2soKQogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgdGhpcy5xdWlsbC5mb3JtYXQoJ3ZpZGVvJywgZmFsc2UpCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LAogICAgICB1cGxvYWRGaWxlVHlwZTogJycsCiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgZWRpdG9yKCkgewogICAgICByZXR1cm4gdGhpcy4kcmVmcy5teVF1aWxsRWRpdG9yLnF1aWxsOwogICAgfSwKICB9LAogIG1vdW50ZWQoKSB7CiAgICBhZGRRdWlsbFRpdGxlKCk7CiAgICBsZXQgY29udGVudCA9ICcnOyAvLyDor7fmsYLlkI7lj7Dov5Tlm57nmoTlhoXlrrnlrZfnrKbkuLIKICAgIHRoaXMuc3RyID0gdGhpcy5lc2NhcGVTdHJpbmdIVE1MKGNvbnRlbnQpOwogIH0sCiAgbWV0aG9kczogewogICAgaGFuZGxlQWRkX3F1aWxsX2VkaXRvcihlKSB7IC8vIOS4iuS8oOWvjOaWh+acrAogICAgICBsZXQgdm0gPSB0aGlzCiAgICAgIGxldCBxdWlsbDAgPSB2bS4kcmVmc1snbXlRdWlsbEVkaXRvciddLnF1aWxsCiAgICAgIGxldCBmaWxlcyA9IGUudGFyZ2V0LmZpbGVzWzBdCiAgICAgIGxldCBwYXJhbSA9IG5ldyBGb3JtRGF0YSgpIC8vIOWIm+W7umZvcm3lr7nosaEKICAgICAgY29uc29sZS5sb2coZmlsZXMpOwogICAgICB0aGlzLnVwbG9hZEZpbGVUeXBlID0gZmlsZXMudHlwZTsKICAgICAgcGFyYW0uYXBwZW5kKCdpbWcnLCBmaWxlcykgLy8g6YCa6L+HYXBwZW5k5ZCRZm9ybeWvueixoea3u+WKoOaVsOaNrgogICAgICBsZXQgY29uZmlnID0gewogICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnbXVsdGlwYXJ0L2Zvcm0tZGF0YScsCiAgICAgICAgICAndG9rZW4nOiAnZXlKaGJHY2lPaUpJVXpJMU5pSXNJblI1Y0NJNklrcFhWQ0o5LmV5SndjM2NpT2lJMU1EVmtOamhoTnpKaE5XWmtaVFF5WVdNM016ZGxOalF5TVRNeE9HWmlZeUlzSW1sa0lqb3lPQ3dpZFhObGNrNWhiV1VpT2lKaFpHRXhJbjAuNlBXT3RYdWY1TDBleG00VWpMUUw1UzdVaFRRZm0wWk84dnlrSlUtcjc1SScKICAgICAgICB9CiAgICAgIH0gLy8g5re75Yqg6K+35rGC5aS0CiAgICAgIHRoaXMuJGF4aW9zLnBvc3QoJ2h0dHA6Ly8xOTIuMTY4LjAuMTY0L2FwcC9XYXRjaEV4L2FwaS9pbWdyZWN2JywgcGFyYW0sIGNvbmZpZykKICAgICAgICAudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgICBsZXQgcXVpbGxGd2IgPSBxdWlsbDAKICAgICAgICAgIGxldCBwYXRoVXJsID0gJ2h0dHA6Ly8xOTIuMTY4LjAuMTY0L2FwcC9XYXRjaEV4L2FwaScgKyByZXNwb25zZS5kYXRhLmltZ3VybAogICAgICAgICAgLy8g6I635Y+W5YWJ5qCH5omA5Zyo5L2N572uCiAgICAgICAgICBsZXQgbGVuZ3RoID0gcXVpbGxGd2IuZ2V0U2VsZWN0aW9uKCkuaW5kZXgKICAgICAgICAgIC8vIOaPkuWFpeWbvueJh++8jHJlc+S4uuacjeWKoeWZqOi/lOWbnueahOWbvueJh+mTvuaOpeWcsOWdgAogICAgICAgICAgaWYgKHRoaXMudXBsb2FkRmlsZVR5cGUuaW5kZXhPZignaW1hZ2UnKSAhPT0gLTEpIHsKICAgICAgICAgICAgcXVpbGxGd2IuaW5zZXJ0RW1iZWQobGVuZ3RoLCAnaW1hZ2UnLCBwYXRoVXJsKQogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcXVpbGxGd2IuaW5zZXJ0RW1iZWQobGVuZ3RoLCAndmlkZW8nLCBwYXRoVXJsKQogICAgICAgICAgfQogICAgICAgICAgLy8g6LCD5pW05YWJ5qCH5Yiw5pyA5ZCOCiAgICAgICAgICBxdWlsbEZ3Yi5zZXRTZWxlY3Rpb24obGVuZ3RoICsgMSkKICAgICAgICB9KQogICAgfSwKICAgIG9uRWRpdG9yUmVhZHkoZWRpdG9yKSB7IC8vIOWHhuWkh+e8lui+keWZqAogICAgICBjb25zb2xlLmxvZyhlZGl0b3IpOwogICAgfSwKICAgIG9uRWRpdG9yQmx1cigpIHt9LCAvLyDlpLHljrvnhKbngrnkuovku7YKICAgIG9uRWRpdG9yRm9jdXMoKSB7fSwgLy8g6I635b6X54Sm54K55LqL5Lu2CiAgICBvbkVkaXRvckNoYW5nZSgpIHsKICAgICAgY29uc29sZS5sb2codGhpcy4kcmVmcy5teVF1aWxsRWRpdG9yLnF1aWxsKTsKICAgICAgY29uc29sZS5sb2codGhpcy5jb250ZW50KTsKICAgIH0sIC8vIOWGheWuueaUueWPmOS6i+S7tgogICAgLy8g6L2s56CBCiAgICBlc2NhcGVTdHJpbmdIVE1MKHN0cikgewogICAgICBzdHIgPSBzdHIucmVwbGFjZSgvJmx0Oy9nLCAnPCcpOwogICAgICBzdHIgPSBzdHIucmVwbGFjZSgvJmd0Oy9nLCAnPicpOwogICAgICByZXR1cm4gc3RyOwogICAgfQogIH0sCgp9Cg=="},{"version":3,"sources":["addRelease.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAefile":"addRelease.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div>\r\n    <!--  新增时输入 -->\r\n    <quill-editor v-model=\"content\" ref=\"myQuillEditor\" :options=\"editorOption\" @blur=\"onEditorBlur($event)\"\r\n      @focus=\"onEditorFocus($event)\" @change=\"onEditorChange($event)\">\r\n    </quill-editor>\r\n    <input style=\"position: fixed;left: -2000px;top: -2000px;\" @change=\"handleAdd_quill_editor\" id=\"input_hide\"\r\n      class=\"upload_input\" type=\"file\">\r\n    <!-- 从数据库读取展示 -->\r\n    <div v-html=\"str\" class=\"ql-editor\">\r\n      {{str}}\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\n  import {\r\n    quillEditor\r\n  } from \"vue-quill-editor\"; //调用编辑器\r\n  import * as Quill from 'quill';\r\n  import 'quill/dist/quill.core.css';\r\n  import 'quill/dist/quill.snow.css';\r\n  import 'quill/dist/quill.bubble.css';\r\n  // import ImageResize from 'quill-image-resize-module';\r\n  import {\r\n    addQuillTitle\r\n  } from '../quill_title';\r\n\r\n  // Quill.register('modules/imageResize', ImageResize)\r\n  let fontSizeStyle = Quill.import('attributors/style/size')\r\n  fontSizeStyle.whitelist = ['10px', '12px', '14px', '16px', '18px', '20px', '22px', '24px', '26px', '32px', '48px']\r\n  Quill.register(fontSizeStyle, true)\r\n  let fonts = [false, 'SimSun', 'SimHei', 'Microsoft-YaHei', 'KaiTi', 'FangSong', 'Arial', 'sans-serif']\r\n  let Font = Quill.import('formats/font')\r\n  Font.whitelist = fonts //将字体加入到白名单\r\n  Quill.register(Font, true)\r\n\r\n  export default {\r\n    components: {\r\n      quillEditor\r\n    },\r\n    data() {\r\n      return {\r\n        content: \"\",\r\n        str: \"\",\r\n        editorOption: {\r\n          placeholder: \"请在这里输入\",\r\n          modules: {\r\n            toolbar: {\r\n              container: [\r\n                ['bold', 'italic', 'underline', 'strike'], //加粗，斜体，下划线，删除线\r\n                ['blockquote', 'code-block'], //引用，代码块\r\n                // [{\r\n                //   'header': 1\r\n                // }, {\r\n                //   'header': 2\r\n                // }], // 标题，键值对的形式；1、2表示字体大小\r\n                [{\r\n                  'list': 'ordered'\r\n                }, {\r\n                  'list': 'bullet'\r\n                }], //列表\r\n                [{\r\n                  'script': 'sub'\r\n                }, {\r\n                  'script': 'super'\r\n                }], // 上下标\r\n                [{\r\n                  'indent': '-1'\r\n                }, {\r\n                  'indent': '+1'\r\n                }], // 缩进\r\n                [{\r\n                  'direction': 'rtl'\r\n                }], // 文本方向\r\n                [{\r\n                  'size': fontSizeStyle.whitelist\r\n                }], // 字体大小\r\n                [{\r\n                  'header': [1, 2, 3, 4, 5, 6]\r\n                }], //几级标题\r\n                [{\r\n                  'color': []\r\n                }, {\r\n                  'background': []\r\n                }], // 字体颜色，字体背景颜色\r\n                [{\r\n                  'font': fonts\r\n                }], //字体\r\n                [{\r\n                  'align': []\r\n                }], //对齐方式\r\n                ['clean'], //清除字体样式\r\n                ['image', 'video'] //上传图片、上传视频\r\n              ],\r\n              handlers: {\r\n                'image': function (value) {\r\n                  if (value) {\r\n                    document.querySelector('#input_hide').click()\r\n                  } else {\r\n                    this.quill.format('image', false)\r\n                  }\r\n                },\r\n                'video': function (value) {\r\n                  if (value) {\r\n                    document.querySelector('#input_hide').click()\r\n                  } else {\r\n                    this.quill.format('video', false)\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        uploadFileType: '',\r\n      }\r\n    },\r\n    computed: {\r\n      editor() {\r\n        return this.$refs.myQuillEditor.quill;\r\n      },\r\n    },\r\n    mounted() {\r\n      addQuillTitle();\r\n      let content = ''; // 请求后台返回的内容字符串\r\n      this.str = this.escapeStringHTML(content);\r\n    },\r\n    methods: {\r\n      handleAdd_quill_editor(e) { // 上传富文本\r\n        let vm = this\r\n        let quill0 = vm.$refs['myQuillEditor'].quill\r\n        let files = e.target.files[0]\r\n        let param = new FormData() // 创建form对象\r\n        console.log(files);\r\n        this.uploadFileType = files.type;\r\n        param.append('img', files) // 通过append向form对象添加数据\r\n        let config = {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n            'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwc3ciOiI1MDVkNjhhNzJhNWZkZTQyYWM3MzdlNjQyMTMxOGZiYyIsImlkIjoyOCwidXNlck5hbWUiOiJhZGExIn0.6PWOtXuf5L0exm4UjLQL5S7UhTQfm0ZO8vykJU-r75I'\r\n          }\r\n        } // 添加请求头\r\n        this.$axios.post('http://192.168.0.164/app/WatchEx/api/imgrecv', param, config)\r\n          .then(response => {\r\n            let quillFwb = quill0\r\n            let pathUrl = 'http://192.168.0.164/app/WatchEx/api' + response.data.imgurl\r\n            // 获取光标所在位置\r\n            let length = quillFwb.getSelection().index\r\n            // 插入图片，res为服务器返回的图片链接地址\r\n            if (this.uploadFileType.indexOf('image') !== -1) {\r\n              quillFwb.insertEmbed(length, 'image', pathUrl)\r\n            } else {\r\n              quillFwb.insertEmbed(length, 'video', pathUrl)\r\n            }\r\n            // 调整光标到最后\r\n            quillFwb.setSelection(length + 1)\r\n          })\r\n      },\r\n      onEditorReady(editor) { // 准备编辑器\r\n        console.log(editor);\r\n      },\r\n      onEditorBlur() {}, // 失去焦点事件\r\n      onEditorFocus() {}, // 获得焦点事件\r\n      onEditorChange() {\r\n        console.log(this.$refs.myQuillEditor.quill);\r\n        console.log(this.content);\r\n      }, // 内容改变事件\r\n      // 转码\r\n      escapeStringHTML(str) {\r\n        str = str.replace(/&lt;/g, '<');\r\n        str = str.replace(/&gt;/g, '>');\r\n        return str;\r\n      }\r\n    },\r\n\r\n  }\r\n</script>\r\n<style lang=\"scss\">\r\n  .ql-snow .ql-editor img {\r\n    max-width: 200px;\r\n    height: 200px;\r\n  }\r\n</style>"]}]}