{"remainingRequest":"D:\\aa-tong\\my-projects\\beautySalon\\salon-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\aa-tong\\my-projects\\beautySalon\\salon-admin\\src\\views\\quillEditor.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"D:\\aa-tong\\my-projects\\beautySalon\\salon-admin\\src\\views\\quillEditor.vue","mtime":1605678320771},{"path":"D:\\aa-tong\\my-projects\\beautySalon\\salon-admin\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\aa-tong\\my-projects\\beautySalon\\salon-admin\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\aa-tong\\my-projects\\beautySalon\\salon-admin\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\aa-tong\\my-projects\\beautySalon\\salon-admin\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\aa-tong\\my-projects\\beautySalon\\salon-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\aa-tong\\my-projects\\beautySalon\\salon-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5xdWlsbC1lZGl0b3IgewogIGhlaWdodDogNzQ1cHg7CgogIC5xbC1jb250YWluZXIgewogICAgaGVpZ2h0OiA2ODBweDsKICB9Cn0KCi5saW1pdCB7CiAgaGVpZ2h0OiAzMHB4OwogIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7CiAgbGluZS1oZWlnaHQ6IDMwcHg7CiAgdGV4dC1hbGlnbjogcmlnaHQ7CgogIHNwYW4gewogICAgY29sb3I6ICNlZTJhN2I7CiAgfQp9CgoucWwtc25vdyAucWwtZWRpdG9yIGltZyB7CiAgbWF4LXdpZHRoOiA0ODBweDsKfQoKLnFsLWVkaXRvciAucWwtdmlkZW8gewogIG1heC13aWR0aDogNDgwcHg7Cn0K"},{"version":3,"sources":["quillEditor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgKA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"quillEditor.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div>\r\n    <!-- quill-editor插件标签 分别绑定各个事件-->\r\n    <quill-editor v-model=\"content\" ref=\"myQuillEditor\" :options=\"editorOption\" @blur=\"onEditorBlur($event)\"\r\n      @focus=\"onEditorFocus($event)\" @change=\"onEditorChange($event)\">\r\n    </quill-editor>\r\n    <div class=\"limit\">当前已输入 <span>{{nowLength()}}</span> 个字符，您还可以输入 <span>{{SurplusLength()}}</span> 个字符。</div>\r\n    <!-- 文件上传input 将它隐藏-->\r\n    <el-upload class=\"upload-demo\" action=\"http://192.168.0.118/app/watchex/imgrecv?java\" :before-upload='beforeUpload'\r\n      :data=\"uploadData\" :on-success='upScuccess' ref=\"upload\" style=\"display:block\">\r\n      <el-button size=\"small\" type=\"primary\" id=\"imgInput\" :loading=\"fullscreenLoading\" element-loading-text=\"插入中,请稍候\">\r\n        点击上传</el-button>\r\n    </el-upload>\r\n  </div>\r\n</template>\r\n<script>\r\n  import * as Quill from 'quill' // 引入编辑器\r\n\r\n  const STATICDOMAIN = '//ss.yidejia.com/'\r\n  const STATVIDEO = '//flv.yidejia.com/'\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        content: '', // 文章内容\r\n        editorOption: {}, // 编辑器选项\r\n        addRange: new Array(),\r\n        uploadData: {},\r\n        photoUrl: '', // 上传图片地址\r\n        uploadType: '', // 上传的文件类型（图片、视频）\r\n        fullscreenLoading: false\r\n      }\r\n    },\r\n    // 页面加载后执行 为编辑器的图片图标和视频图标绑定点击事件\r\n    mounted() {\r\n      // 为图片ICON绑定事件  getModule 为编辑器的内部属性\r\n      console.log(this.$refs.myQuillEditor.quill.getModule('toolbar'));\r\n      this.$refs.myQuillEditor.quill.getModule('toolbar').addHandler('image', this.imgHandler)\r\n      this.$refs.myQuillEditor.quill.getModule('toolbar').addHandler('video', this.videoHandler) // 为视频ICON绑定事件\r\n    },\r\n    methods: {\r\n      nowLength() {\r\n        return this.content.length\r\n      },\r\n\r\n      SurplusLength() { // 计算属性 获得当前输入字符长度\r\n        let num = 10000 - Number(this.content.length)\r\n        if (num > 0) {\r\n          return num\r\n        } else {\r\n          return 0\r\n        }\r\n      },\r\n\r\n      // 图片上传前获得数据token数据\r\n      qnUpload(file) {\r\n        this.fullscreenLoading = true\r\n        const suffix = file.name.split('.')\r\n        const ext = suffix.splice(suffix.length - 1, 1)[0]\r\n        console.log(this.uploadType);\r\n        console.log(this.api);\r\n        if (this.uploadType === 'image') { // 如果是点击插入图片\r\n          return this.api.getQNToken().then(res => {\r\n            this.uploadData = {\r\n              key: `image/${suffix.join('.')}_${new Date().getTime()}.${ext}`,\r\n              token: res\r\n            }\r\n          })\r\n        } else if (this.uploadType === 'video') { // 如果是点击插入视频\r\n          return this.api.getVideoQNToken().then(res => {\r\n            this.uploadData = {\r\n              key: `video/${suffix.join('.')}_${new Date().getTime()}.${ext}`,\r\n              token: res\r\n            }\r\n          })\r\n        }\r\n      },\r\n\r\n      // 图片上传之前调取的函数\r\n      beforeUpload(file) {\r\n        return this.qnUpload(file)\r\n      },\r\n\r\n      // 图片上传成功回调   插入到编辑器中\r\n      upScuccess(e, file, fileList) {\r\n        console.log('9999999');\r\n        this.fullscreenLoading = false\r\n        let vm = this\r\n        let url = ''\r\n        if (this.uploadType === 'image') { // 获得文件上传后的URL地址\r\n          url = STATICDOMAIN + e.key\r\n        } else if (this.uploadType === 'video') {\r\n          url = STATVIDEO + e.key\r\n        }\r\n        if (url != null && url.length > 0) { // 将文件上传后的URL地址插入到编辑器文本中\r\n          let value = url\r\n          vm.addRange = vm.$refs.myQuillEditor.quill.getSelection()\r\n          value = value.indexOf('http') !== -1 ? value : 'http:' + value\r\n          vm.$refs.myQuillEditor.quill.insertEmbed(vm.addRange !== null ? vm.addRange.index : 0, vm.uploadType, value,\r\n            Quill.sources.USER) // 调用编辑器的 insertEmbed 方法，插入URL\r\n          console.log(url);\r\n        } else {\r\n          this.$message.error(`${vm.uploadType}插入失败`)\r\n        }\r\n        this.$refs['upload'].clearFiles() // 插入成功后清除input的内容\r\n      },\r\n\r\n      // 点击图片ICON触发事件\r\n      imgHandler(state) {\r\n        this.addRange = this.$refs.myQuillEditor.quill.getSelection()\r\n        if (state) {\r\n          let fileInput = document.getElementById('imgInput')\r\n          fileInput.click() // 加一个触发事件\r\n        }\r\n        this.uploadType = 'image'\r\n      },\r\n\r\n      // 点击视频ICON触发事件\r\n      videoHandler(state) {\r\n        this.addRange = this.$refs.myQuillEditor.quill.getSelection()\r\n        if (state) {\r\n          let fileInput = document.getElementById('imgInput')\r\n          fileInput.click() // 加一个触发事件\r\n        }\r\n        this.uploadType = 'video'\r\n      },\r\n\r\n      // 编辑器光标离开 将编辑器内容发射给父组件\r\n      onEditorBlur(editor) {\r\n        this.$emit('getValue', this.content)\r\n      },\r\n\r\n      // 编辑器获得光标\r\n      onEditorFocus(editor) {\r\n        editor.enable(true) // 实现达到上限字符可删除\r\n      },\r\n\r\n      // 编辑器文本发生变化\r\n      onEditorChange({\r\n        editor,\r\n        html,\r\n        text\r\n      }) {\r\n        let textLength = text.length\r\n        if (textLength > 10000) {\r\n          this.$message.error('最多输入10000个字符')\r\n          editor.enable(false)\r\n        }\r\n        this.$emit('getValue', this.content)\r\n      },\r\n\r\n      // 清除编辑器内容\r\n      callMethod() {\r\n        this.content = ''\r\n      },\r\n    },\r\n  }\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n  .quill-editor {\r\n    height: 745px;\r\n\r\n    .ql-container {\r\n      height: 680px;\r\n    }\r\n  }\r\n\r\n  .limit {\r\n    height: 30px;\r\n    border: 1px solid #ccc;\r\n    line-height: 30px;\r\n    text-align: right;\r\n\r\n    span {\r\n      color: #ee2a7b;\r\n    }\r\n  }\r\n\r\n  .ql-snow .ql-editor img {\r\n    max-width: 480px;\r\n  }\r\n\r\n  .ql-editor .ql-video {\r\n    max-width: 480px;\r\n  }\r\n</style>"]}]}