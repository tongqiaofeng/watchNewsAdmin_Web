{"remainingRequest":"D:\\aa-tong\\my-projects\\article\\node_modules\\babel-loader\\lib\\index.js!D:\\aa-tong\\my-projects\\article\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\aa-tong\\my-projects\\article\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\aa-tong\\my-projects\\article\\src\\views\\addRelease.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\aa-tong\\my-projects\\article\\src\\views\\addRelease.vue","mtime":1605681448984},{"path":"D:\\aa-tong\\my-projects\\article\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\aa-tong\\my-projects\\article\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\aa-tong\\my-projects\\article\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\aa-tong\\my-projects\\article\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2YiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgcXVpbGxFZGl0b3IgfSBmcm9tICJ2dWUtcXVpbGwtZWRpdG9yIjsgLy/osIPnlKjnvJbovpHlmagKCmltcG9ydCAqIGFzIFF1aWxsIGZyb20gJ3F1aWxsJzsKaW1wb3J0ICdxdWlsbC9kaXN0L3F1aWxsLmNvcmUuY3NzJzsKaW1wb3J0ICdxdWlsbC9kaXN0L3F1aWxsLnNub3cuY3NzJzsKaW1wb3J0ICdxdWlsbC9kaXN0L3F1aWxsLmJ1YmJsZS5jc3MnOyAvLyBpbXBvcnQgSW1hZ2VSZXNpemUgZnJvbSAncXVpbGwtaW1hZ2UtcmVzaXplLW1vZHVsZSc7CgppbXBvcnQgeyBhZGRRdWlsbFRpdGxlIH0gZnJvbSAnLi4vcXVpbGxfdGl0bGUnOyAvLyBRdWlsbC5yZWdpc3RlcignbW9kdWxlcy9pbWFnZVJlc2l6ZScsIEltYWdlUmVzaXplKQoKdmFyIGZvbnRTaXplU3R5bGUgPSBRdWlsbC5pbXBvcnQoJ2F0dHJpYnV0b3JzL3N0eWxlL3NpemUnKTsKZm9udFNpemVTdHlsZS53aGl0ZWxpc3QgPSBbJzEwcHgnLCAnMTJweCcsICcxNHB4JywgJzE2cHgnLCAnMThweCcsICcyMHB4JywgJzIycHgnLCAnMjRweCcsICcyNnB4JywgJzMycHgnLCAnNDhweCddOwpRdWlsbC5yZWdpc3Rlcihmb250U2l6ZVN0eWxlLCB0cnVlKTsKdmFyIGZvbnRzID0gW2ZhbHNlLCAnU2ltU3VuJywgJ1NpbUhlaScsICdNaWNyb3NvZnQtWWFIZWknLCAnS2FpVGknLCAnRmFuZ1NvbmcnLCAnQXJpYWwnLCAnc2Fucy1zZXJpZiddOwp2YXIgRm9udCA9IFF1aWxsLmltcG9ydCgnZm9ybWF0cy9mb250Jyk7CkZvbnQud2hpdGVsaXN0ID0gZm9udHM7IC8v5bCG5a2X5L2T5Yqg5YWl5Yiw55m95ZCN5Y2VCgpRdWlsbC5yZWdpc3RlcihGb250LCB0cnVlKTsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIHF1aWxsRWRpdG9yOiBxdWlsbEVkaXRvcgogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNvbnRlbnQ6ICIiLAogICAgICBzdHI6ICIiLAogICAgICBlZGl0b3JPcHRpb246IHsKICAgICAgICBwbGFjZWhvbGRlcjogIuivt+WcqOi/memHjOi+k+WFpSIsCiAgICAgICAgbW9kdWxlczogewogICAgICAgICAgdG9vbGJhcjogewogICAgICAgICAgICBjb250YWluZXI6IFtbJ2JvbGQnLCAnaXRhbGljJywgJ3VuZGVybGluZScsICdzdHJpa2UnXSwgLy/liqDnspfvvIzmlpzkvZPvvIzkuIvliJLnur/vvIzliKDpmaTnur8KICAgICAgICAgICAgWydibG9ja3F1b3RlJywgJ2NvZGUtYmxvY2snXSwgLy/lvJXnlKjvvIzku6PnoIHlnZcKICAgICAgICAgICAgLy8gW3sKICAgICAgICAgICAgLy8gICAnaGVhZGVyJzogMQogICAgICAgICAgICAvLyB9LCB7CiAgICAgICAgICAgIC8vICAgJ2hlYWRlcic6IDIKICAgICAgICAgICAgLy8gfV0sIC8vIOagh+mimO+8jOmUruWAvOWvueeahOW9ouW8j++8mzHjgIEy6KGo56S65a2X5L2T5aSn5bCPCiAgICAgICAgICAgIFt7CiAgICAgICAgICAgICAgJ2xpc3QnOiAnb3JkZXJlZCcKICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICdsaXN0JzogJ2J1bGxldCcKICAgICAgICAgICAgfV0sIC8v5YiX6KGoCiAgICAgICAgICAgIFt7CiAgICAgICAgICAgICAgJ3NjcmlwdCc6ICdzdWInCiAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAnc2NyaXB0JzogJ3N1cGVyJwogICAgICAgICAgICB9XSwgLy8g5LiK5LiL5qCHCiAgICAgICAgICAgIFt7CiAgICAgICAgICAgICAgJ2luZGVudCc6ICctMScKICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICdpbmRlbnQnOiAnKzEnCiAgICAgICAgICAgIH1dLCAvLyDnvKnov5sKICAgICAgICAgICAgW3sKICAgICAgICAgICAgICAnZGlyZWN0aW9uJzogJ3J0bCcKICAgICAgICAgICAgfV0sIC8vIOaWh+acrOaWueWQkQogICAgICAgICAgICBbewogICAgICAgICAgICAgICdzaXplJzogZm9udFNpemVTdHlsZS53aGl0ZWxpc3QKICAgICAgICAgICAgfV0sIC8vIOWtl+S9k+Wkp+WwjwogICAgICAgICAgICBbewogICAgICAgICAgICAgICdoZWFkZXInOiBbMSwgMiwgMywgNCwgNSwgNl0KICAgICAgICAgICAgfV0sIC8v5Yeg57qn5qCH6aKYCiAgICAgICAgICAgIFt7CiAgICAgICAgICAgICAgJ2NvbG9yJzogW10KICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICdiYWNrZ3JvdW5kJzogW10KICAgICAgICAgICAgfV0sIC8vIOWtl+S9k+minOiJsu+8jOWtl+S9k+iDjOaZr+minOiJsgogICAgICAgICAgICBbewogICAgICAgICAgICAgICdmb250JzogZm9udHMKICAgICAgICAgICAgfV0sIC8v5a2X5L2TCiAgICAgICAgICAgIFt7CiAgICAgICAgICAgICAgJ2FsaWduJzogW10KICAgICAgICAgICAgfV0sIC8v5a+56b2Q5pa55byPCiAgICAgICAgICAgIFsnY2xlYW4nXSwgLy/muIXpmaTlrZfkvZPmoLflvI8KICAgICAgICAgICAgWydpbWFnZScsICd2aWRlbyddIC8v5LiK5Lyg5Zu+54mH44CB5LiK5Lyg6KeG6aKRCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIGhhbmRsZXJzOiB7CiAgICAgICAgICAgICAgJ2ltYWdlJzogZnVuY3Rpb24gaW1hZ2UodmFsdWUpIHsKICAgICAgICAgICAgICAgIGlmICh2YWx1ZSkgewogICAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjaW5wdXRfaGlkZScpLmNsaWNrKCk7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICB0aGlzLnF1aWxsLmZvcm1hdCgnaW1hZ2UnLCBmYWxzZSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAndmlkZW8nOiBmdW5jdGlvbiB2aWRlbyh2YWx1ZSkgewogICAgICAgICAgICAgICAgaWYgKHZhbHVlKSB7CiAgICAgICAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNpbnB1dF9oaWRlJykuY2xpY2soKTsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgIHRoaXMucXVpbGwuZm9ybWF0KCd2aWRlbycsIGZhbHNlKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sCiAgICAgIHVwbG9hZEZpbGVUeXBlOiAnJwogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBlZGl0b3I6IGZ1bmN0aW9uIGVkaXRvcigpIHsKICAgICAgcmV0dXJuIHRoaXMuJHJlZnMubXlRdWlsbEVkaXRvci5xdWlsbDsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICBhZGRRdWlsbFRpdGxlKCk7CiAgICB2YXIgY29udGVudCA9ICcnOyAvLyDor7fmsYLlkI7lj7Dov5Tlm57nmoTlhoXlrrnlrZfnrKbkuLIKCiAgICB0aGlzLnN0ciA9IHRoaXMuZXNjYXBlU3RyaW5nSFRNTChjb250ZW50KTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGhhbmRsZUFkZF9xdWlsbF9lZGl0b3I6IGZ1bmN0aW9uIGhhbmRsZUFkZF9xdWlsbF9lZGl0b3IoZSkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgLy8g5LiK5Lyg5a+M5paH5pysCiAgICAgIHZhciB2bSA9IHRoaXM7CiAgICAgIHZhciBxdWlsbDAgPSB2bS4kcmVmc1snbXlRdWlsbEVkaXRvciddLnF1aWxsOwogICAgICB2YXIgZmlsZXMgPSBlLnRhcmdldC5maWxlc1swXTsKICAgICAgdmFyIHBhcmFtID0gbmV3IEZvcm1EYXRhKCk7IC8vIOWIm+W7umZvcm3lr7nosaEKCiAgICAgIGNvbnNvbGUubG9nKGZpbGVzKTsKICAgICAgdGhpcy51cGxvYWRGaWxlVHlwZSA9IGZpbGVzLnR5cGU7CiAgICAgIHBhcmFtLmFwcGVuZCgnaW1nJywgZmlsZXMpOyAvLyDpgJrov4dhcHBlbmTlkJFmb3Jt5a+56LGh5re75Yqg5pWw5o2uCgogICAgICB2YXIgY29uZmlnID0gewogICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnbXVsdGlwYXJ0L2Zvcm0tZGF0YScsCiAgICAgICAgICAndG9rZW4nOiAnZXlKaGJHY2lPaUpJVXpJMU5pSXNJblI1Y0NJNklrcFhWQ0o5LmV5SndjM2NpT2lJMU1EVmtOamhoTnpKaE5XWmtaVFF5WVdNM016ZGxOalF5TVRNeE9HWmlZeUlzSW1sa0lqb3lPQ3dpZFhObGNrNWhiV1VpT2lKaFpHRXhJbjAuNlBXT3RYdWY1TDBleG00VWpMUUw1UzdVaFRRZm0wWk84dnlrSlUtcjc1SScKICAgICAgICB9CiAgICAgIH07IC8vIOa3u+WKoOivt+axguWktAoKICAgICAgdGhpcy4kYXhpb3MucG9zdCgnaHR0cDovLzE5Mi4xNjguMC4xNjQvYXBwL1dhdGNoRXgvYXBpL2ltZ3JlY3YnLCBwYXJhbSwgY29uZmlnKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIHZhciBxdWlsbEZ3YiA9IHF1aWxsMDsKICAgICAgICB2YXIgcGF0aFVybCA9ICdodHRwOi8vMTkyLjE2OC4wLjE2NC9hcHAvV2F0Y2hFeC9hcGknICsgcmVzcG9uc2UuZGF0YS5pbWd1cmw7IC8vIOiOt+WPluWFieagh+aJgOWcqOS9jee9rgoKICAgICAgICB2YXIgbGVuZ3RoID0gcXVpbGxGd2IuZ2V0U2VsZWN0aW9uKCkuaW5kZXg7IC8vIOaPkuWFpeWbvueJh++8jHJlc+S4uuacjeWKoeWZqOi/lOWbnueahOWbvueJh+mTvuaOpeWcsOWdgAoKICAgICAgICBpZiAoX3RoaXMudXBsb2FkRmlsZVR5cGUuaW5kZXhPZignaW1hZ2UnKSAhPT0gLTEpIHsKICAgICAgICAgIHF1aWxsRndiLmluc2VydEVtYmVkKGxlbmd0aCwgJ2ltYWdlJywgcGF0aFVybCk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHF1aWxsRndiLmluc2VydEVtYmVkKGxlbmd0aCwgJ3ZpZGVvJywgcGF0aFVybCk7CiAgICAgICAgfSAvLyDosIPmlbTlhYnmoIfliLDmnIDlkI4KCgogICAgICAgIHF1aWxsRndiLnNldFNlbGVjdGlvbihsZW5ndGggKyAxKTsKICAgICAgfSk7CiAgICB9LAogICAgb25FZGl0b3JSZWFkeTogZnVuY3Rpb24gb25FZGl0b3JSZWFkeShlZGl0b3IpIHsKICAgICAgLy8g5YeG5aSH57yW6L6R5ZmoCiAgICAgIGNvbnNvbGUubG9nKGVkaXRvcik7CiAgICB9LAogICAgb25FZGl0b3JCbHVyOiBmdW5jdGlvbiBvbkVkaXRvckJsdXIoKSB7fSwKICAgIC8vIOWkseWOu+eEpueCueS6i+S7tgogICAgb25FZGl0b3JGb2N1czogZnVuY3Rpb24gb25FZGl0b3JGb2N1cygpIHt9LAogICAgLy8g6I635b6X54Sm54K55LqL5Lu2CiAgICBvbkVkaXRvckNoYW5nZTogZnVuY3Rpb24gb25FZGl0b3JDaGFuZ2UoKSB7CiAgICAgIGNvbnNvbGUubG9nKHRoaXMuJHJlZnMubXlRdWlsbEVkaXRvci5xdWlsbCk7CiAgICAgIGNvbnNvbGUubG9nKHRoaXMuY29udGVudCk7CiAgICB9LAogICAgLy8g5YaF5a655pS55Y+Y5LqL5Lu2CiAgICAvLyDovaznoIEKICAgIGVzY2FwZVN0cmluZ0hUTUw6IGZ1bmN0aW9uIGVzY2FwZVN0cmluZ0hUTUwoc3RyKSB7CiAgICAgIHN0ciA9IHN0ci5yZXBsYWNlKC8mbHQ7L2csICc8Jyk7CiAgICAgIHN0ciA9IHN0ci5yZXBsYWNlKC8mZ3Q7L2csICc+Jyk7CiAgICAgIHJldHVybiBzdHI7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["addRelease.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <!--  新增时输入 -->\r\n    <quill-editor v-model=\"content\" ref=\"myQuillEditor\" :options=\"editorOption\" @blur=\"onEditorBlur($event)\"\r\n      @focus=\"onEditorFocus($event)\" @change=\"onEditorChange($event)\">\r\n    </quill-editor>\r\n    <input style=\"position: fixed;left: -2000px;top: -2000px;\" @change=\"handleAdd_quill_editor\" id=\"input_hide\"\r\n      class=\"upload_input\" type=\"file\">\r\n    <!-- 从数据库读取展示 -->\r\n    <div v-html=\"str\" class=\"ql-editor\">\r\n      {{str}}\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\n  import {\r\n    quillEditor\r\n  } from \"vue-quill-editor\"; //调用编辑器\r\n  import * as Quill from 'quill';\r\n  import 'quill/dist/quill.core.css';\r\n  import 'quill/dist/quill.snow.css';\r\n  import 'quill/dist/quill.bubble.css';\r\n  // import ImageResize from 'quill-image-resize-module';\r\n  import {\r\n    addQuillTitle\r\n  } from '../quill_title';\r\n\r\n  // Quill.register('modules/imageResize', ImageResize)\r\n  let fontSizeStyle = Quill.import('attributors/style/size')\r\n  fontSizeStyle.whitelist = ['10px', '12px', '14px', '16px', '18px', '20px', '22px', '24px', '26px', '32px', '48px']\r\n  Quill.register(fontSizeStyle, true)\r\n  let fonts = [false, 'SimSun', 'SimHei', 'Microsoft-YaHei', 'KaiTi', 'FangSong', 'Arial', 'sans-serif']\r\n  let Font = Quill.import('formats/font')\r\n  Font.whitelist = fonts //将字体加入到白名单\r\n  Quill.register(Font, true)\r\n\r\n  export default {\r\n    components: {\r\n      quillEditor\r\n    },\r\n    data() {\r\n      return {\r\n        content: \"\",\r\n        str: \"\",\r\n        editorOption: {\r\n          placeholder: \"请在这里输入\",\r\n          modules: {\r\n            toolbar: {\r\n              container: [\r\n                ['bold', 'italic', 'underline', 'strike'], //加粗，斜体，下划线，删除线\r\n                ['blockquote', 'code-block'], //引用，代码块\r\n                // [{\r\n                //   'header': 1\r\n                // }, {\r\n                //   'header': 2\r\n                // }], // 标题，键值对的形式；1、2表示字体大小\r\n                [{\r\n                  'list': 'ordered'\r\n                }, {\r\n                  'list': 'bullet'\r\n                }], //列表\r\n                [{\r\n                  'script': 'sub'\r\n                }, {\r\n                  'script': 'super'\r\n                }], // 上下标\r\n                [{\r\n                  'indent': '-1'\r\n                }, {\r\n                  'indent': '+1'\r\n                }], // 缩进\r\n                [{\r\n                  'direction': 'rtl'\r\n                }], // 文本方向\r\n                [{\r\n                  'size': fontSizeStyle.whitelist\r\n                }], // 字体大小\r\n                [{\r\n                  'header': [1, 2, 3, 4, 5, 6]\r\n                }], //几级标题\r\n                [{\r\n                  'color': []\r\n                }, {\r\n                  'background': []\r\n                }], // 字体颜色，字体背景颜色\r\n                [{\r\n                  'font': fonts\r\n                }], //字体\r\n                [{\r\n                  'align': []\r\n                }], //对齐方式\r\n                ['clean'], //清除字体样式\r\n                ['image', 'video'] //上传图片、上传视频\r\n              ],\r\n              handlers: {\r\n                'image': function (value) {\r\n                  if (value) {\r\n                    document.querySelector('#input_hide').click()\r\n                  } else {\r\n                    this.quill.format('image', false)\r\n                  }\r\n                },\r\n                'video': function (value) {\r\n                  if (value) {\r\n                    document.querySelector('#input_hide').click()\r\n                  } else {\r\n                    this.quill.format('video', false)\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        uploadFileType: '',\r\n      }\r\n    },\r\n    computed: {\r\n      editor() {\r\n        return this.$refs.myQuillEditor.quill;\r\n      },\r\n    },\r\n    mounted() {\r\n      addQuillTitle();\r\n      let content = ''; // 请求后台返回的内容字符串\r\n      this.str = this.escapeStringHTML(content);\r\n    },\r\n    methods: {\r\n      handleAdd_quill_editor(e) { // 上传富文本\r\n        let vm = this\r\n        let quill0 = vm.$refs['myQuillEditor'].quill\r\n        let files = e.target.files[0]\r\n        let param = new FormData() // 创建form对象\r\n        console.log(files);\r\n        this.uploadFileType = files.type;\r\n        param.append('img', files) // 通过append向form对象添加数据\r\n        let config = {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n            'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwc3ciOiI1MDVkNjhhNzJhNWZkZTQyYWM3MzdlNjQyMTMxOGZiYyIsImlkIjoyOCwidXNlck5hbWUiOiJhZGExIn0.6PWOtXuf5L0exm4UjLQL5S7UhTQfm0ZO8vykJU-r75I'\r\n          }\r\n        } // 添加请求头\r\n        this.$axios.post('http://192.168.0.164/app/WatchEx/api/imgrecv', param, config)\r\n          .then(response => {\r\n            let quillFwb = quill0\r\n            let pathUrl = 'http://192.168.0.164/app/WatchEx/api' + response.data.imgurl\r\n            // 获取光标所在位置\r\n            let length = quillFwb.getSelection().index\r\n            // 插入图片，res为服务器返回的图片链接地址\r\n            if (this.uploadFileType.indexOf('image') !== -1) {\r\n              quillFwb.insertEmbed(length, 'image', pathUrl)\r\n            } else {\r\n              quillFwb.insertEmbed(length, 'video', pathUrl)\r\n            }\r\n            // 调整光标到最后\r\n            quillFwb.setSelection(length + 1)\r\n          })\r\n      },\r\n      onEditorReady(editor) { // 准备编辑器\r\n        console.log(editor);\r\n      },\r\n      onEditorBlur() {}, // 失去焦点事件\r\n      onEditorFocus() {}, // 获得焦点事件\r\n      onEditorChange() {\r\n        console.log(this.$refs.myQuillEditor.quill);\r\n        console.log(this.content);\r\n      }, // 内容改变事件\r\n      // 转码\r\n      escapeStringHTML(str) {\r\n        str = str.replace(/&lt;/g, '<');\r\n        str = str.replace(/&gt;/g, '>');\r\n        return str;\r\n      }\r\n    },\r\n\r\n  }\r\n</script>\r\n<style lang=\"scss\">\r\n  .ql-snow .ql-editor img {\r\n    max-width: 200px;\r\n    height: 200px;\r\n  }\r\n</style>"],"sourceRoot":"src/views"}]}