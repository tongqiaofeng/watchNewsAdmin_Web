{"remainingRequest":"D:\\aa-tong\\my-projects\\beautySalon\\salon-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\aa-tong\\my-projects\\beautySalon\\salon-admin\\src\\views\\addRelease.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\aa-tong\\my-projects\\beautySalon\\salon-admin\\src\\views\\addRelease.vue","mtime":1606125226114},{"path":"D:\\aa-tong\\my-projects\\beautySalon\\salon-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\aa-tong\\my-projects\\beautySalon\\salon-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\aa-tong\\my-projects\\beautySalon\\salon-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\aa-tong\\my-projects\\beautySalon\\salon-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["addRelease.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA","file":"addRelease.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div>\r\n    <!--  新增时输入 -->\r\n    <div class=\"add-release-container\">\r\n      <quill-editor v-model=\"content\" ref=\"myQuillEditor\" :options=\"editorOption\" @blur=\"onEditorBlur($event)\"\r\n        @focus=\"onEditorFocus($event)\" @change=\"onEditorChange($event)\">\r\n      </quill-editor>\r\n      <input style=\"position: fixed;left: -2000px;top: -2000px;\" @change=\"handleAdd_quill_editor\" id=\"input_hide\"\r\n        class=\"upload_input\" type=\"file\">\r\n    </div>\r\n\r\n    <!-- 从数据库读取展示 -->\r\n    <div v-html=\"str\" class=\"ql-editor\">\r\n      {{str}}\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\n  import {\r\n    quillEditor\r\n  } from \"vue-quill-editor\"; //调用编辑器\r\n  import * as Quill from 'quill';\r\n  import 'quill/dist/quill.core.css';\r\n  import 'quill/dist/quill.snow.css';\r\n  import 'quill/dist/quill.bubble.css';\r\n  // import ImageResize from 'quill-image-resize-module';\r\n  import {\r\n    addQuillTitle\r\n  } from '../quill_title';\r\n\r\n  // Quill.register('modules/imageResize', ImageResize)\r\n  let fontSizeStyle = Quill.import('attributors/style/size')\r\n  fontSizeStyle.whitelist = ['10px', '12px', '14px', '16px', '18px', '20px', '22px', '24px', '26px', '32px', '48px']\r\n  Quill.register(fontSizeStyle, true)\r\n  let fonts = [false, 'SimSun', 'SimHei', 'Microsoft-YaHei', 'KaiTi', 'FangSong', 'Arial', 'sans-serif']\r\n  let Font = Quill.import('formats/font')\r\n  Font.whitelist = fonts //将字体加入到白名单\r\n  Quill.register(Font, true)\r\n\r\n  export default {\r\n    components: {\r\n      quillEditor\r\n    },\r\n    data() {\r\n      return {\r\n        content: \"\",\r\n        str: \"\",\r\n        editorOption: {\r\n          placeholder: \"请在这里输入\",\r\n          modules: {\r\n            toolbar: {\r\n              container: [\r\n                ['bold', 'italic', 'underline', 'strike'], //加粗，斜体，下划线，删除线\r\n                ['blockquote', 'code-block'], //引用，代码块\r\n                [{\r\n                  'header': 1\r\n                }, {\r\n                  'header': 2\r\n                }], // 标题，键值对的形式；1、2表示字体大小\r\n                [{\r\n                  'list': 'ordered'\r\n                }, {\r\n                  'list': 'bullet'\r\n                }], //列表\r\n                [{\r\n                  'script': 'sub'\r\n                }, {\r\n                  'script': 'super'\r\n                }], // 上下标\r\n                [{\r\n                  'indent': '-1'\r\n                }, {\r\n                  'indent': '+1'\r\n                }], // 缩进\r\n                [{\r\n                  'direction': 'rtl'\r\n                }], // 文本方向\r\n                [{\r\n                  'size': fontSizeStyle.whitelist\r\n                }], // 字体大小\r\n                [{\r\n                  'header': [1, 2, 3, 4, 5, 6]\r\n                }], //几级标题\r\n                [{\r\n                  'color': []\r\n                }, {\r\n                  'background': []\r\n                }], // 字体颜色，字体背景颜色\r\n                [{\r\n                  'font': fonts\r\n                }], //字体\r\n                [{\r\n                  'align': []\r\n                }], //对齐方式\r\n                ['clean'], //清除字体样式\r\n                ['image', 'video'], //上传图片、上传视频\r\n                // ['revoke'],\r\n                // ['redo']\r\n              ],\r\n              handlers: {\r\n                'image': function (value) {\r\n                  if (value) {\r\n                    document.querySelector('#input_hide').click()\r\n                  } else {\r\n                    this.quill.format('image', false)\r\n                  }\r\n                },\r\n                'video': function (value) {\r\n                  if (value) {\r\n                    document.querySelector('#input_hide').click()\r\n                  } else {\r\n                    this.quill.format('video', false)\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        uploadFileType: '',\r\n        changeText: []\r\n      }\r\n    },\r\n    computed: {\r\n      editor() {\r\n        return this.$refs.myQuillEditor.quill;\r\n      },\r\n    },\r\n    mounted() {\r\n      // var revoke = document.querySelector('.quill-editor .ql-revoke') //获取元素\r\n      // // console.log(revoke);\r\n      // var redo = document.querySelector('.quill-editor .ql-redo')\r\n      // var Front = document.createElement('i') //创建元素\r\n      // var after = document.createElement('i')\r\n      // Front.className = \"iconfont icon-chexiao1\" //新增class属性\r\n      // after.className = \"iconfont icon-zhongzuo\"\r\n      // revoke.appendChild(Front) //追加到元素中\r\n      // redo.appendChild(after)\r\n\r\n      // let revokebtn = document.getElementsByClassName('ql-remove')[0];\r\n      // revokebtn.onclick = this.revokeClick;\r\n      // let redobtn = document.getElementsByClassName('ql-redo')[0];\r\n      // redobtn.onclick = this.nextClick;\r\n\r\n      addQuillTitle();\r\n      let content = ''; // 请求后台返回的内容字符串\r\n      this.str = this.escapeStringHTML(content);\r\n    },\r\n    methods: {\r\n      // 富文本 上传图片\r\n      handleAdd_quill_editor(e) {\r\n        let file = e.target.files[0];\r\n        console.log(file);\r\n        this.uploadFileType = file.type;\r\n\r\n        let that = this;\r\n        if (file === undefined) {\r\n          return\r\n        }\r\n        if (file.size / 1024 > 1025) { // 文件大于1M（根据需求更改），进行压缩上传\r\n          this.photoCompress(file, { // 调用压缩图片方法\r\n            quality: 0.7\r\n          }, function (base64Codes) {\r\n            // console.log(\"压缩后：\" + base.length / 1024 + \" \" + base);\r\n            let bl = that.base64UrlToBlob(base64Codes)\r\n            // file.append('file', bl, 'file_' + Date.parse(new Date()) + '.jpg') // 文件对象\r\n            that.uploadLice(bl) // 请求图片上传接口\r\n          })\r\n        } else { // 小于等于1M 原图上传\r\n          this.uploadLice(file)\r\n        }\r\n      },\r\n      // base64 转 Blob 格式 和file格式\r\n      base64UrlToBlob(urlData) {\r\n        let arr = urlData.split(','),\r\n          mime = arr[0].match(/:(.*?);/)[1], // 去掉url的头，并转化为byte\r\n          bstr = atob(arr[1]), // 处理异常,将ascii码小于0的转换为大于0\r\n          n = bstr.length,\r\n          u8arr = new Uint8Array(n)\r\n        while (n--) {\r\n          u8arr[n] = bstr.charCodeAt(n)\r\n        }\r\n        // 转blob\r\n        // return new Blob([u8arr], {type: mime})\r\n        let filename = Date.parse(new Date()) + '.jpg'\r\n        // 转file\r\n        return new File([u8arr], filename, {\r\n          type: mime\r\n        })\r\n      },\r\n      /*压缩图片\r\n      file：文件(类型是图片格式)，\r\n      obj：文件压缩后对象width， height， quality(0-1)\r\n      callback：容器或者回调函数\r\n      */\r\n      photoCompress(file, obj, callback) {\r\n        let that = this\r\n        let ready = new FileReader()\r\n        /* 开始读取指定File对象中的内容. 读取操作完成时,返回一个URL格式的字符串. */\r\n        ready.readAsDataURL(file)\r\n        ready.onload = function () {\r\n          let re = this.result\r\n          that.canvasDataURL(re, obj, callback) // 开始压缩\r\n        }\r\n      },\r\n      /* 利用canvas数据化图片进行压缩 */\r\n      /* 图片转base64 */\r\n      canvasDataURL(path, obj, callback) {\r\n        let img = new Image()\r\n        img.src = path\r\n        img.onload = function () {\r\n          let that = this // 指到img\r\n          // 默认按比例压缩\r\n          let w = that.width,\r\n            h = that.height,\r\n            scale = w / h\r\n          w = obj.width || w\r\n          h = obj.height || (w / scale)\r\n          let quality = 0.7 // 默认图片质量为0.7\r\n          // 生成canvas\r\n          let canvas = document.createElement('canvas')\r\n          let ctx = canvas.getContext('2d')\r\n\r\n          // 创建属性节点\r\n          let anw = document.createAttribute('width')\r\n          anw.nodeValue = w\r\n          let anh = document.createAttribute('height')\r\n          anh.nodeValue = h\r\n          canvas.setAttributeNode(anw)\r\n          canvas.setAttributeNode(anh)\r\n          // 铺底色\r\n          ctx.fillStyle = \"#fff\";\r\n          ctx.fillRect(0, 0, w, h);\r\n          ctx.drawImage(that, 0, 0, w, h)\r\n\r\n          // 图像质量\r\n          if (obj.quality && obj.quality >= 1 && obj.quality < 0) {\r\n            quality = obj.quality\r\n          }\r\n          // quality值越小，所绘制出的图像越模糊\r\n          let base64 = canvas.toDataURL('image/jpeg', quality)\r\n          // 回调函数返回base64的值\r\n          callback(base64)\r\n        }\r\n      },\r\n      //  返回file文件，调用接口执行上传\r\n      uploadLice(file) {\r\n        console.log(file)\r\n        let formdata = new FormData(); //创建form对象\r\n        formdata.append(\"img\", file); //通过append向form对象添加数据\r\n        this.uploadImg(formdata);\r\n      },\r\n      uploadImg(formdata) {\r\n        let quill0 = this.$refs['myQuillEditor'].quill;\r\n\r\n        let config = {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n            'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwc3ciOiI1MDVkNjhhNzJhNWZkZTQyYWM3MzdlNjQyMTMxOGZiYyIsImlkIjoyOCwidXNlck5hbWUiOiJhZGExIn0.6PWOtXuf5L0exm4UjLQL5S7UhTQfm0ZO8vykJU-r75I'\r\n          }\r\n        }; // 添加请求头\r\n\r\n        this.$axios.post('http://192.168.0.164/app/WatchEx/api/imgrecv', formdata, config)\r\n          .then(response => {\r\n            let pathUrl = 'http://192.168.0.164/app/WatchEx/api' + response.data.imgurl;\r\n            // 获取光标所在位置\r\n            let length = quill0.getSelection().index;\r\n            // 插入图片，res为服务器返回的图片链接地址\r\n            if (this.uploadFileType.indexOf('image') !== -1) {\r\n              quill0.insertEmbed(length, 'image', pathUrl);\r\n            } else {\r\n              quill0.insertEmbed(length, 'video', pathUrl);\r\n            }\r\n            // 调整光标到最后\r\n            quill0.setSelection(length + 1);\r\n          })\r\n      },\r\n\r\n      onEditorReady(editor) { // 准备编辑器\r\n        // console.log(editor);\r\n      },\r\n      onEditorBlur() {}, // 失去焦点事件\r\n      onEditorFocus() {}, // 获得焦点事件\r\n      onEditorChange() {\r\n        // console.log(this.$refs.myQuillEditor.quill);\r\n        console.log(this.content);\r\n        // console.log(this.changeText);\r\n        if (this.changeText.length >= 50) { //限制数组长度\r\n          this.changeText.shift() //清除第一条数据\r\n          this.changeText.push(this.content)\r\n        } else {\r\n          this.changeText.push(this.content) //追加数据\r\n        }\r\n      }, // 内容改变事件\r\n      // 转码\r\n      escapeStringHTML(str) {\r\n        str = str.replace(/&lt;/g, '<');\r\n        str = str.replace(/&gt;/g, '>');\r\n        return str;\r\n      },\r\n      revokeClick() {\r\n        for (let i = 0; i < this.changeText.length; i++) {\r\n          if (this.content == this.changeText[i]) {\r\n            console.log(this.changeText[i]);\r\n            this.content = this.changeText[i - 1]\r\n          }\r\n        }\r\n      },\r\n      nextClick() {\r\n        for (let i = 0; i < this.changeText.length; i++) {\r\n          if (this.content == this.changeText[i]) {\r\n            console.log(this.changeText[i]);\r\n            this.content = this.changeText[i + 1]\r\n          }\r\n\r\n        }\r\n      },\r\n    },\r\n\r\n  }\r\n</script>\r\n<style lang=\"scss\">\r\n  .add-release-container {\r\n    width: 80%;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  .ql-toolbar.ql-snow .ql-formats {\r\n    margin-right: 5px;\r\n  }\r\n\r\n  .ql-snow .ql-editor {\r\n    min-height: 200px;\r\n  }\r\n\r\n  .ql-snow .ql-editor img {\r\n    max-width: 200px;\r\n    height: 200px;\r\n  }\r\n\r\n  .ql-editor .ql-video {\r\n    display: block;\r\n    max-width: 400px;\r\n    height: 300px;\r\n  }\r\n\r\n  .ql-snow .ql-picker.ql-size {\r\n    width: 65px;\r\n  }\r\n</style>"]}]}