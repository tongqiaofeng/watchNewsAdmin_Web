{"remainingRequest":"D:\\aa-tong\\my-projects\\beautySalon\\salon-admin\\node_modules\\babel-loader\\lib\\index.js!D:\\aa-tong\\my-projects\\beautySalon\\salon-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\aa-tong\\my-projects\\beautySalon\\salon-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\aa-tong\\my-projects\\beautySalon\\salon-admin\\src\\components\\add-release.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\aa-tong\\my-projects\\beautySalon\\salon-admin\\src\\components\\add-release.vue","mtime":1613963836846},{"path":"D:\\aa-tong\\my-projects\\beautySalon\\salon-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\aa-tong\\my-projects\\beautySalon\\salon-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\aa-tong\\my-projects\\beautySalon\\salon-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\aa-tong\\my-projects\\beautySalon\\salon-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["add-release.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <!--  新增时输入 -->\r\n    <div class=\"add-release-container\">\r\n      <quill-editor v-model=\"editorContent\" ref=\"myQuillEditor\" :options=\"editorOption\" @blur=\"onEditorBlur($event)\"\r\n        @focus=\"onEditorFocus($event)\" @change=\"onEditorChange($event)\">\r\n      </quill-editor>\r\n      <input style=\"position: fixed;left: -2000px;top: -2000px;\" @change=\"handleAdd_quill_editor\" id=\"input_hide\"\r\n        class=\"upload_input\" type=\"file\">\r\n    </div>\r\n    <!-- 从数据库读取展示 -->\r\n    <!-- <div v-html=\"str\" class=\"ql-editor\">\r\n      {{str}}\r\n    </div> -->\r\n  </div>\r\n</template>\r\n<script>\r\n  import {\r\n    quillEditor\r\n  } from \"vue-quill-editor\"; //调用编辑器\r\n  import * as Quill from 'quill';\r\n  import 'quill/dist/quill.core.css';\r\n  import 'quill/dist/quill.snow.css';\r\n  import 'quill/dist/quill.bubble.css';\r\n  import {\r\n    addQuillTitle\r\n  } from '../quill_title';\r\n\r\n  import ImageResize from 'quill-image-resize-module'\r\n  Quill.register('modules/imageResize', ImageResize)\r\n\r\n  let fontSizeStyle = Quill.import('attributors/style/size')\r\n  fontSizeStyle.whitelist = ['10px', '12px', '14px', '16px', '18px', '20px', '22px', '24px', '26px', '32px', '48px']\r\n  Quill.register(fontSizeStyle, true)\r\n  let fonts = [false, 'SimSun', 'SimHei', 'Microsoft-YaHei', 'KaiTi', 'FangSong', 'Arial', 'sans-serif']\r\n  let Font = Quill.import('formats/font')\r\n  Font.whitelist = fonts //将字体加入到白名单\r\n  Quill.register(Font, true)\r\n\r\n  const handlers = {\r\n    shadeBox: null,\r\n    // 添加工具方法\r\n    sourceEditor: function () {\r\n      // alert('我新添加的工具方法');\r\n      const container = this.container;\r\n      const firstChild = container.nextElementSibling.firstChild;\r\n\r\n      // 在第一次点击源码编辑的时候，会在整个工具条上加一个div，层级比工具条高，再次点击工具条任意位置，就会退出源码编辑。可以在下面cssText里面加个背景颜色看看效果。\r\n\r\n      if (!this.shadeBox) {\r\n        let shadeBox = this.shadeBox = document.createElement('div');\r\n\r\n        shadeBox.style.cssText =\r\n          'position:absolute; top:0; left:0; width:100%; height:100%; cursor:pointer;';\r\n        container.style.position = 'relative';\r\n        container.appendChild(shadeBox);\r\n        firstChild.innerText = firstChild.innerHTML;\r\n\r\n        shadeBox.addEventListener('click', function () {\r\n          this.style.display = 'none';\r\n          firstChild.innerHTML = firstChild.innerText.trim();\r\n        }, false);\r\n      } else {\r\n        this.shadeBox.style.display = 'block';\r\n        firstChild.innerText = firstChild.innerHTML;\r\n      }\r\n    },\r\n    'image': function (value) {\r\n      if (value) {\r\n        document.querySelector('#input_hide').click()\r\n      } else {\r\n        this.quill.format('image', false)\r\n      }\r\n    },\r\n    'video': function (value) {\r\n      if (value) {\r\n        document.querySelector('#input_hide').click()\r\n      } else {\r\n        this.quill.format('video', false)\r\n      }\r\n    }\r\n  };\r\n\r\n  // 在使用的页面中初始化按钮样式\r\n  const initButton = function () {\r\n    // 样式随便改\r\n    const sourceEditorButton = document.querySelector('.ql-sourceEditor');\r\n    sourceEditorButton.style.cssText = 'font-size:18px';\r\n\r\n    // 加了elementui的icon\r\n    sourceEditorButton.classList.add('el-icon-edit-outline');\r\n    // 鼠标放上去显示的提示文字\r\n    sourceEditorButton.title = '源码编辑';\r\n  };\r\n\r\n\r\n  export default {\r\n    components: {\r\n      quillEditor\r\n    },\r\n    data() {\r\n      return {\r\n        editorContent: \"\",\r\n        str: \"\",\r\n        editorOption: {\r\n          placeholder: \"请在这里输入\",\r\n          modules: {\r\n            clipboard: {\r\n              matchVisual: false\r\n            },\r\n            toolbar: {\r\n              container: [\r\n                ['bold', 'italic', 'underline', 'strike'], //加粗，斜体，下划线，删除线\r\n                ['blockquote', 'code-block'], //引用，代码块\r\n                [{\r\n                  'header': 1\r\n                }, {\r\n                  'header': 2\r\n                }], // 标题，键值对的形式；1、2表示字体大小\r\n                [{\r\n                  'list': 'ordered'\r\n                }, {\r\n                  'list': 'bullet'\r\n                }], //列表\r\n                [{\r\n                  'script': 'sub'\r\n                }, {\r\n                  'script': 'super'\r\n                }], // 上下标\r\n                [{\r\n                  'indent': '-1'\r\n                }, {\r\n                  'indent': '+1'\r\n                }], // 缩进\r\n                [{\r\n                  'direction': 'rtl'\r\n                }], // 文本方向\r\n                [{\r\n                  'size': fontSizeStyle.whitelist\r\n                }], // 字体大小\r\n                [{\r\n                  'header': [1, 2, 3, 4, 5, 6]\r\n                }], //几级标题\r\n                [{\r\n                  'color': []\r\n                }, {\r\n                  'background': []\r\n                }], // 字体颜色，字体背景颜色\r\n                [{\r\n                  'font': fonts\r\n                }], //字体\r\n                [{\r\n                  'align': []\r\n                }], //对齐方式\r\n                ['clean'], //清除字体样式\r\n                ['image', 'video'], //上传图片、上传视频\r\n                ['sourceEditor'],\r\n                // ['revoke'],\r\n                // ['redo']\r\n              ],\r\n              handlers: handlers\r\n            },\r\n            imageResize: {\r\n              displayStyles: {\r\n                backgroundColor: 'black',\r\n                border: 'none',\r\n                color: 'white'\r\n              },\r\n              modules: ['Resize', 'DisplaySize', 'Toolbar']\r\n            },\r\n          },\r\n        },\r\n        uploadFileType: '',\r\n        changeText: []\r\n      }\r\n    },\r\n    props: [\"editorDadContent\"],\r\n    computed: {\r\n      editor() {\r\n        return this.$refs.myQuillEditor.quill;\r\n      },\r\n    },\r\n\r\n    mounted() {\r\n      initButton();\r\n      this.editorContent = this.editorDadContent;\r\n      console.log(this.editorContent);\r\n\r\n      // var revoke = document.querySelector('.quill-editor .ql-revoke') //获取元素\r\n      // // console.log(revoke);\r\n      // var redo = document.querySelector('.quill-editor .ql-redo')\r\n      // var Front = document.createElement('i') //创建元素\r\n      // var after = document.createElement('i')\r\n      // Front.className = \"iconfont icon-chexiao1\" //新增class属性\r\n      // after.className = \"iconfont icon-zhongzuo\"\r\n      // revoke.appendChild(Front) //追加到元素中\r\n      // redo.appendChild(after)\r\n\r\n      // let revokebtn = document.getElementsByClassName('ql-remove')[0];\r\n      // revokebtn.onclick = this.revokeClick;\r\n      // let redobtn = document.getElementsByClassName('ql-redo')[0];\r\n      // redobtn.onclick = this.nextClick;\r\n\r\n      addQuillTitle();\r\n    },\r\n    methods: {\r\n      // 富文本 上传图片\r\n      handleAdd_quill_editor(e) {\r\n        let file = e.target.files[0];\r\n        console.log(file);\r\n        this.uploadFileType = file.type;\r\n\r\n        let that = this;\r\n        if (file === undefined) {\r\n          return\r\n        }\r\n        if (file.size / 1024 > 1025) { // 文件大于1M（根据需求更改），进行压缩上传\r\n          this.photoCompress(file, { // 调用压缩图片方法\r\n            quality: 0.7\r\n          }, function (base64Codes) {\r\n            // console.log(\"压缩后：\" + base.length / 1024 + \" \" + base);\r\n            let bl = that.base64UrlToBlob(base64Codes)\r\n            // file.append('file', bl, 'file_' + Date.parse(new Date()) + '.jpg') // 文件对象\r\n            that.uploadLice(bl) // 请求图片上传接口\r\n          })\r\n        } else { // 小于等于1M 原图上传\r\n          this.uploadLice(file)\r\n        }\r\n      },\r\n      // base64 转 Blob 格式 和file格式\r\n      base64UrlToBlob(urlData) {\r\n        let arr = urlData.split(','),\r\n          mime = arr[0].match(/:(.*?);/)[1], // 去掉url的头，并转化为byte\r\n          bstr = atob(arr[1]), // 处理异常,将ascii码小于0的转换为大于0\r\n          n = bstr.length,\r\n          u8arr = new Uint8Array(n)\r\n        while (n--) {\r\n          u8arr[n] = bstr.charCodeAt(n)\r\n        }\r\n        // 转blob\r\n        // return new Blob([u8arr], {type: mime})\r\n        let filename = Date.parse(new Date()) + '.jpg'\r\n        // 转file\r\n        return new File([u8arr], filename, {\r\n          type: mime\r\n        })\r\n      },\r\n      /*压缩图片\r\n      file：文件(类型是图片格式)，\r\n      obj：文件压缩后对象width， height， quality(0-1)\r\n      callback：容器或者回调函数\r\n      */\r\n      photoCompress(file, obj, callback) {\r\n        let that = this\r\n        let ready = new FileReader()\r\n        /* 开始读取指定File对象中的内容. 读取操作完成时,返回一个URL格式的字符串. */\r\n        ready.readAsDataURL(file)\r\n        ready.onload = function () {\r\n          let re = this.result\r\n          that.canvasDataURL(re, obj, callback) // 开始压缩\r\n        }\r\n      },\r\n      /* 利用canvas数据化图片进行压缩 */\r\n      /* 图片转base64 */\r\n      canvasDataURL(path, obj, callback) {\r\n        let img = new Image()\r\n        img.src = path\r\n        img.onload = function () {\r\n          let that = this // 指到img\r\n          // 默认按比例压缩\r\n          let w = that.width,\r\n            h = that.height,\r\n            scale = w / h\r\n          w = obj.width || w\r\n          h = obj.height || (w / scale)\r\n          let quality = 0.7 // 默认图片质量为0.7\r\n          // 生成canvas\r\n          let canvas = document.createElement('canvas')\r\n          let ctx = canvas.getContext('2d')\r\n\r\n          // 创建属性节点\r\n          let anw = document.createAttribute('width')\r\n          anw.nodeValue = w\r\n          let anh = document.createAttribute('height')\r\n          anh.nodeValue = h\r\n          canvas.setAttributeNode(anw)\r\n          canvas.setAttributeNode(anh)\r\n          // 铺底色\r\n          ctx.fillStyle = \"#fff\";\r\n          ctx.fillRect(0, 0, w, h);\r\n          ctx.drawImage(that, 0, 0, w, h)\r\n\r\n          // 图像质量\r\n          if (obj.quality && obj.quality >= 1 && obj.quality < 0) {\r\n            quality = obj.quality\r\n          }\r\n          // quality值越小，所绘制出的图像越模糊\r\n          let base64 = canvas.toDataURL('image/jpeg', quality)\r\n          // 回调函数返回base64的值\r\n          callback(base64)\r\n        }\r\n      },\r\n      //  返回file文件，调用接口执行上传\r\n      uploadLice(file) {\r\n        console.log(file)\r\n        let formdata = new FormData(); //创建form对象\r\n        formdata.append(\"imgUrl\", file); //通过append向form对象添加数据\r\n        this.uploadImg(formdata);\r\n      },\r\n      uploadImg(formdata) {\r\n        let quill0 = this.$refs['myQuillEditor'].quill;\r\n\r\n        // let config = {\r\n        //   headers: {\r\n        //     'Content-Type': 'multipart/form-data',\r\n        //     'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwc3ciOiI1MDVkNjhhNzJhNWZkZTQyYWM3MzdlNjQyMTMxOGZiYyIsImlkIjoyOCwidXNlck5hbWUiOiJhZGExIn0.6PWOtXuf5L0exm4UjLQL5S7UhTQfm0ZO8vykJU-r75I'\r\n        //   }\r\n        // };\r\n\r\n        this.$axios.post(this.$store.state.baseUrl + \"/imgRecv\", formdata)\r\n          .then(res => {\r\n            let pathUrl = this.$store.state.baseUrl + res.data.imgUrl;\r\n            // 获取光标所在位置\r\n            let length = quill0.getSelection().index;\r\n            // 插入图片，res为服务器返回的图片链接地址\r\n            if (this.uploadFileType.indexOf('image') !== -1) {\r\n              quill0.insertEmbed(length, 'image', pathUrl);\r\n            } else {\r\n              quill0.insertEmbed(length, 'video', pathUrl);\r\n            }\r\n            // 调整光标到最后\r\n            quill0.setSelection(length + 1);\r\n          }).catch(err => {\r\n            console.log(err);\r\n          })\r\n      },\r\n\r\n      onEditorReady(editor) { // 准备编辑器\r\n        // console.log(editor);\r\n      },\r\n      onEditorBlur() {}, // 失去焦点事件\r\n      onEditorFocus() {}, // 获得焦点事件\r\n      // 内容改变事件\r\n      onEditorChange() {\r\n        console.log(this.editorContent);\r\n        this.$emit('editorCon', this.editorContent);\r\n      },\r\n    },\r\n\r\n  }\r\n</script>\r\n<style lang=\"scss\">\r\n  .add-release-container {\r\n    width: 80%;\r\n  }\r\n\r\n  .ql-toolbar.ql-snow .ql-formats {\r\n    margin-right: 5px;\r\n  }\r\n\r\n  .ql-snow .ql-editor {\r\n    height: 400px;\r\n  }\r\n\r\n  .ql-snow .ql-picker.ql-size {\r\n    width: 65px;\r\n  }\r\n</style>"],"sourceRoot":"src/components"}]}