{"remainingRequest":"G:\\aa-tong\\my-project\\copy\\watchNewsAdmin_Web\\node_modules\\babel-loader\\lib\\index.js!G:\\aa-tong\\my-project\\copy\\watchNewsAdmin_Web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!G:\\aa-tong\\my-project\\copy\\watchNewsAdmin_Web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\aa-tong\\my-project\\copy\\watchNewsAdmin_Web\\src\\components\\add-release.vue?vue&type=script&lang=js&","dependencies":[{"path":"G:\\aa-tong\\my-project\\copy\\watchNewsAdmin_Web\\src\\components\\add-release.vue","mtime":1655793222521},{"path":"G:\\aa-tong\\my-project\\copy\\watchNewsAdmin_Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\aa-tong\\my-project\\copy\\watchNewsAdmin_Web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"G:\\aa-tong\\my-project\\copy\\watchNewsAdmin_Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\aa-tong\\my-project\\copy\\watchNewsAdmin_Web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2YiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcubWF0Y2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcudHJpbSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnVpbnQ4LWFycmF5IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuY29weS13aXRoaW4iOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5ldmVyeSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbGwiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maWx0ZXIiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maW5kIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZmluZC1pbmRleCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZvci1lYWNoIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5pbmRleC1vZiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5Lml0ZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuam9pbiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5Lmxhc3QtaW5kZXgtb2YiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5tYXAiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5yZWR1Y2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5yZWR1Y2UtcmlnaHQiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5yZXZlcnNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc2V0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc2xpY2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zb21lIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc29ydCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnN1YmFycmF5IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkudG8tbG9jYWxlLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnRvLXN0cmluZyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IHF1aWxsRWRpdG9yIH0gZnJvbSAidnVlLXF1aWxsLWVkaXRvciI7IC8v6LCD55So57yW6L6R5ZmoCgppbXBvcnQgKiBhcyBRdWlsbCBmcm9tICJxdWlsbCI7CmltcG9ydCAicXVpbGwvZGlzdC9xdWlsbC5jb3JlLmNzcyI7CmltcG9ydCAicXVpbGwvZGlzdC9xdWlsbC5zbm93LmNzcyI7CmltcG9ydCAicXVpbGwvZGlzdC9xdWlsbC5idWJibGUuY3NzIjsKaW1wb3J0IHsgYWRkUXVpbGxUaXRsZSB9IGZyb20gIi4uL3V0aWxzL3F1aWxsX3RpdGxlIjsKaW1wb3J0IEltYWdlUmVzaXplIGZyb20gInF1aWxsLWltYWdlLXJlc2l6ZS1tb2R1bGUiOwpRdWlsbC5yZWdpc3RlcigibW9kdWxlcy9pbWFnZVJlc2l6ZSIsIEltYWdlUmVzaXplKTsKdmFyIGZvbnRTaXplU3R5bGUgPSBRdWlsbC5pbXBvcnQoImF0dHJpYnV0b3JzL3N0eWxlL3NpemUiKTsKZm9udFNpemVTdHlsZS53aGl0ZWxpc3QgPSBbIjEwcHgiLCAiMTJweCIsICIxNHB4IiwgIjE2cHgiLCAiMThweCIsICIyMHB4IiwgIjIycHgiLCAiMjRweCIsICIyNnB4IiwgIjMycHgiLCAiNDhweCJdOwpRdWlsbC5yZWdpc3Rlcihmb250U2l6ZVN0eWxlLCB0cnVlKTsKdmFyIGZvbnRzID0gW2ZhbHNlLCAiU2ltU3VuIiwgIlNpbUhlaSIsICJNaWNyb3NvZnQtWWFIZWkiLCAiS2FpVGkiLCAiRmFuZ1NvbmciLCAiQXJpYWwiLCAic2Fucy1zZXJpZiJdOwp2YXIgRm9udCA9IFF1aWxsLmltcG9ydCgiZm9ybWF0cy9mb250Iik7CkZvbnQud2hpdGVsaXN0ID0gZm9udHM7IC8v5bCG5a2X5L2T5Yqg5YWl5Yiw55m95ZCN5Y2VCgpRdWlsbC5yZWdpc3RlcihGb250LCB0cnVlKTsKdmFyIGhhbmRsZXJzID0gewogIHNoYWRlQm94OiBudWxsLAogIC8vIOa3u+WKoOW3peWFt+aWueazlQogIHNvdXJjZUVkaXRvcjogZnVuY3Rpb24gc291cmNlRWRpdG9yKCkgewogICAgLy8gYWxlcnQoJ+aIkeaWsOa3u+WKoOeahOW3peWFt+aWueazlScpOwogICAgdmFyIGNvbnRhaW5lciA9IHRoaXMuY29udGFpbmVyOwogICAgdmFyIGZpcnN0Q2hpbGQgPSBjb250YWluZXIubmV4dEVsZW1lbnRTaWJsaW5nLmZpcnN0Q2hpbGQ7IC8vIOWcqOesrOS4gOasoeeCueWHu+a6kOeggee8lui+keeahOaXtuWAme+8jOS8muWcqOaVtOS4quW3peWFt+adoeS4iuWKoOS4gOS4qmRpdu+8jOWxgue6p+avlOW3peWFt+adoemrmO+8jOWGjeasoeeCueWHu+W3peWFt+adoeS7u+aEj+S9jee9ru+8jOWwseS8mumAgOWHuua6kOeggee8lui+keOAguWPr+S7peWcqOS4i+mdomNzc1RleHTph4zpnaLliqDkuKrog4zmma/popzoibLnnIvnnIvmlYjmnpzjgIIKCiAgICBpZiAoIXRoaXMuc2hhZGVCb3gpIHsKICAgICAgdmFyIHNoYWRlQm94ID0gdGhpcy5zaGFkZUJveCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpOwogICAgICBzaGFkZUJveC5zdHlsZS5jc3NUZXh0ID0gInBvc2l0aW9uOmFic29sdXRlOyB0b3A6MDsgbGVmdDowOyB3aWR0aDoxMDAlOyBoZWlnaHQ6MTAwJTsgY3Vyc29yOnBvaW50ZXI7IjsKICAgICAgY29udGFpbmVyLnN0eWxlLnBvc2l0aW9uID0gInJlbGF0aXZlIjsKICAgICAgY29udGFpbmVyLmFwcGVuZENoaWxkKHNoYWRlQm94KTsKICAgICAgZmlyc3RDaGlsZC5pbm5lclRleHQgPSBmaXJzdENoaWxkLmlubmVySFRNTDsKICAgICAgc2hhZGVCb3guYWRkRXZlbnRMaXN0ZW5lcigiY2xpY2siLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgdGhpcy5zdHlsZS5kaXNwbGF5ID0gIm5vbmUiOwogICAgICAgIGZpcnN0Q2hpbGQuaW5uZXJIVE1MID0gZmlyc3RDaGlsZC5pbm5lclRleHQudHJpbSgpOwogICAgICB9LCBmYWxzZSk7CiAgICB9IGVsc2UgewogICAgICB0aGlzLnNoYWRlQm94LnN0eWxlLmRpc3BsYXkgPSAiYmxvY2siOwogICAgICBmaXJzdENoaWxkLmlubmVyVGV4dCA9IGZpcnN0Q2hpbGQuaW5uZXJIVE1MOwogICAgfQogIH0sCiAgaW1hZ2U6IGZ1bmN0aW9uIGltYWdlKHZhbHVlKSB7CiAgICBpZiAodmFsdWUpIHsKICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiI2lucHV0X2hpZGUiKS5jbGljaygpOwogICAgfSBlbHNlIHsKICAgICAgdGhpcy5xdWlsbC5mb3JtYXQoImltYWdlIiwgZmFsc2UpOwogICAgfQogIH0sCiAgdmlkZW86IGZ1bmN0aW9uIHZpZGVvKHZhbHVlKSB7CiAgICBpZiAodmFsdWUpIHsKICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiI2lucHV0X2hpZGUiKS5jbGljaygpOwogICAgfSBlbHNlIHsKICAgICAgdGhpcy5xdWlsbC5mb3JtYXQoInZpZGVvIiwgZmFsc2UpOwogICAgfQogIH0KfTsgLy8g5Zyo5L2/55So55qE6aG16Z2i5Lit5Yid5aeL5YyW5oyJ6ZKu5qC35byPCgp2YXIgaW5pdEJ1dHRvbiA9IGZ1bmN0aW9uIGluaXRCdXR0b24oKSB7CiAgLy8g5qC35byP6ZqP5L6/5pS5CiAgdmFyIHNvdXJjZUVkaXRvckJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIi5xbC1zb3VyY2VFZGl0b3IiKTsKICBzb3VyY2VFZGl0b3JCdXR0b24uc3R5bGUuY3NzVGV4dCA9ICJmb250LXNpemU6MThweCI7IC8vIOWKoOS6hmVsZW1lbnR1aeeahGljb24KCiAgc291cmNlRWRpdG9yQnV0dG9uLmNsYXNzTGlzdC5hZGQoImVsLWljb24tZWRpdC1vdXRsaW5lIik7IC8vIOm8oOagh+aUvuS4iuWOu+aYvuekuueahOaPkOekuuaWh+WtlwoKICBzb3VyY2VFZGl0b3JCdXR0b24udGl0bGUgPSAi5rqQ56CB57yW6L6RIjsKfTsKCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBxdWlsbEVkaXRvcjogcXVpbGxFZGl0b3IKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBlZGl0b3JDb250ZW50OiAiIiwKICAgICAgc3RyOiAiIiwKICAgICAgZWRpdG9yT3B0aW9uOiB7CiAgICAgICAgcGxhY2Vob2xkZXI6ICLor7flnKjov5nph4zovpPlhaUiLAogICAgICAgIG1vZHVsZXM6IHsKICAgICAgICAgIGNsaXBib2FyZDogewogICAgICAgICAgICBtYXRjaFZpc3VhbDogZmFsc2UKICAgICAgICAgIH0sCiAgICAgICAgICB0b29sYmFyOiB7CiAgICAgICAgICAgIGNvbnRhaW5lcjogW1siYm9sZCIsICJpdGFsaWMiLCAidW5kZXJsaW5lIiwgInN0cmlrZSJdLCAvL+WKoOeyl++8jOaWnOS9k++8jOS4i+WIkue6v++8jOWIoOmZpOe6vwogICAgICAgICAgICBbImJsb2NrcXVvdGUiLCAiY29kZS1ibG9jayJdLCAvL+W8leeUqO+8jOS7o+eggeWdlwogICAgICAgICAgICBbewogICAgICAgICAgICAgIGhlYWRlcjogMQogICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgaGVhZGVyOiAyCiAgICAgICAgICAgIH1dLCAvLyDmoIfpopjvvIzplK7lgLzlr7nnmoTlvaLlvI/vvJsx44CBMuihqOekuuWtl+S9k+Wkp+WwjwogICAgICAgICAgICBbewogICAgICAgICAgICAgIGxpc3Q6ICJvcmRlcmVkIgogICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgbGlzdDogImJ1bGxldCIKICAgICAgICAgICAgfV0sIC8v5YiX6KGoCiAgICAgICAgICAgIFt7CiAgICAgICAgICAgICAgc2NyaXB0OiAic3ViIgogICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgc2NyaXB0OiAic3VwZXIiCiAgICAgICAgICAgIH1dLCAvLyDkuIrkuIvmoIcKICAgICAgICAgICAgW3sKICAgICAgICAgICAgICBpbmRlbnQ6ICItMSIKICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgIGluZGVudDogIisxIgogICAgICAgICAgICB9XSwgLy8g57yp6L+bCiAgICAgICAgICAgIFt7CiAgICAgICAgICAgICAgZGlyZWN0aW9uOiAicnRsIgogICAgICAgICAgICB9XSwgLy8g5paH5pys5pa55ZCRCiAgICAgICAgICAgIFt7CiAgICAgICAgICAgICAgc2l6ZTogZm9udFNpemVTdHlsZS53aGl0ZWxpc3QKICAgICAgICAgICAgfV0sIC8vIOWtl+S9k+Wkp+WwjwogICAgICAgICAgICBbewogICAgICAgICAgICAgIGhlYWRlcjogWzEsIDIsIDMsIDQsIDUsIDZdCiAgICAgICAgICAgIH1dLCAvL+WHoOe6p+agh+mimAogICAgICAgICAgICBbewogICAgICAgICAgICAgIGNvbG9yOiBbXQogICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgYmFja2dyb3VuZDogW10KICAgICAgICAgICAgfV0sIC8vIOWtl+S9k+minOiJsu+8jOWtl+S9k+iDjOaZr+minOiJsgogICAgICAgICAgICBbewogICAgICAgICAgICAgIGZvbnQ6IGZvbnRzCiAgICAgICAgICAgIH1dLCAvL+Wtl+S9kwogICAgICAgICAgICBbewogICAgICAgICAgICAgIGFsaWduOiBbXQogICAgICAgICAgICB9XSwgLy/lr7npvZDmlrnlvI8KICAgICAgICAgICAgWyJjbGVhbiJdLCAvL+a4hemZpOWtl+S9k+agt+W8jwogICAgICAgICAgICBbImltYWdlIiwgInZpZGVvIl0sIC8v5LiK5Lyg5Zu+54mH44CB5LiK5Lyg6KeG6aKRCiAgICAgICAgICAgIFsic291cmNlRWRpdG9yIl0gLy8gWydyZXZva2UnXSwKICAgICAgICAgICAgLy8gWydyZWRvJ10KICAgICAgICAgICAgXSwKICAgICAgICAgICAgaGFuZGxlcnM6IGhhbmRsZXJzCiAgICAgICAgICB9LAogICAgICAgICAgaW1hZ2VSZXNpemU6IHsKICAgICAgICAgICAgZGlzcGxheVN0eWxlczogewogICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogImJsYWNrIiwKICAgICAgICAgICAgICBib3JkZXI6ICJub25lIiwKICAgICAgICAgICAgICBjb2xvcjogIndoaXRlIgogICAgICAgICAgICB9LAogICAgICAgICAgICBtb2R1bGVzOiBbIlJlc2l6ZSIsICJEaXNwbGF5U2l6ZSIsICJUb29sYmFyIl0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sCiAgICAgIHVwbG9hZEZpbGVUeXBlOiAiIiwKICAgICAgY2hhbmdlVGV4dDogW10KICAgIH07CiAgfSwKICBwcm9wczogWyJlZGl0b3JEYWRDb250ZW50Il0sCiAgY29tcHV0ZWQ6IHsKICAgIGVkaXRvcjogZnVuY3Rpb24gZWRpdG9yKCkgewogICAgICByZXR1cm4gdGhpcy4kcmVmcy5teVF1aWxsRWRpdG9yLnF1aWxsOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIGluaXRCdXR0b24oKTsKICAgIHRoaXMuZWRpdG9yQ29udGVudCA9IHRoaXMuZWRpdG9yRGFkQ29udGVudDsgLy8gY29uc29sZS5sb2codGhpcy5lZGl0b3JDb250ZW50KTsKCiAgICBhZGRRdWlsbFRpdGxlKCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICAvLyDlr4zmlofmnKwg5LiK5Lyg5Zu+54mHCiAgICBoYW5kbGVBZGRfcXVpbGxfZWRpdG9yOiBmdW5jdGlvbiBoYW5kbGVBZGRfcXVpbGxfZWRpdG9yKGUpIHsKICAgICAgdmFyIGZpbGUgPSBlLnRhcmdldC5maWxlc1swXTsgLy8gY29uc29sZS5sb2coZmlsZSk7CgogICAgICB0aGlzLnVwbG9hZEZpbGVUeXBlID0gZmlsZS50eXBlOwogICAgICB2YXIgdGhhdCA9IHRoaXM7CgogICAgICBpZiAoZmlsZSA9PT0gdW5kZWZpbmVkKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICBpZiAoZmlsZS5zaXplIC8gMTAyNCA+IDEwMjUpIHsKICAgICAgICAvLyDmlofku7blpKfkuo4xTe+8iOagueaNrumcgOaxguabtOaUue+8ie+8jOi/m+ihjOWOi+e8qeS4iuS8oAogICAgICAgIHRoaXMucGhvdG9Db21wcmVzcyhmaWxlLCB7CiAgICAgICAgICAvLyDosIPnlKjljovnvKnlm77niYfmlrnms5UKICAgICAgICAgIHF1YWxpdHk6IDAuNwogICAgICAgIH0sIGZ1bmN0aW9uIChiYXNlNjRDb2RlcykgewogICAgICAgICAgLy8gY29uc29sZS5sb2coIuWOi+e8qeWQju+8miIgKyBiYXNlLmxlbmd0aCAvIDEwMjQgKyAiICIgKyBiYXNlKTsKICAgICAgICAgIHZhciBibCA9IHRoYXQuYmFzZTY0VXJsVG9CbG9iKGJhc2U2NENvZGVzKTsgLy8gZmlsZS5hcHBlbmQoJ2ZpbGUnLCBibCwgJ2ZpbGVfJyArIERhdGUucGFyc2UobmV3IERhdGUoKSkgKyAnLmpwZycpIC8vIOaWh+S7tuWvueixoQoKICAgICAgICAgIHRoYXQudXBsb2FkTGljZShibCk7IC8vIOivt+axguWbvueJh+S4iuS8oOaOpeWPowogICAgICAgIH0pOwogICAgICB9IGVsc2UgewogICAgICAgIC8vIOWwj+S6juetieS6jjFNIOWOn+WbvuS4iuS8oAogICAgICAgIHRoaXMudXBsb2FkTGljZShmaWxlKTsKICAgICAgfQogICAgfSwKICAgIC8vIGJhc2U2NCDovawgQmxvYiDmoLzlvI8g5ZKMZmlsZeagvOW8jwogICAgYmFzZTY0VXJsVG9CbG9iOiBmdW5jdGlvbiBiYXNlNjRVcmxUb0Jsb2IodXJsRGF0YSkgewogICAgICB2YXIgYXJyID0gdXJsRGF0YS5zcGxpdCgiLCIpLAogICAgICAgICAgbWltZSA9IGFyclswXS5tYXRjaCgvOiguKj8pOy8pWzFdLAogICAgICAgICAgLy8g5Y675o6JdXJs55qE5aS077yM5bm26L2s5YyW5Li6Ynl0ZQogICAgICBic3RyID0gYXRvYihhcnJbMV0pLAogICAgICAgICAgLy8g5aSE55CG5byC5bi4LOWwhmFzY2lp56CB5bCP5LqOMOeahOi9rOaNouS4uuWkp+S6jjAKICAgICAgbiA9IGJzdHIubGVuZ3RoLAogICAgICAgICAgdThhcnIgPSBuZXcgVWludDhBcnJheShuKTsKCiAgICAgIHdoaWxlIChuLS0pIHsKICAgICAgICB1OGFycltuXSA9IGJzdHIuY2hhckNvZGVBdChuKTsKICAgICAgfSAvLyDovaxibG9iCiAgICAgIC8vIHJldHVybiBuZXcgQmxvYihbdThhcnJdLCB7dHlwZTogbWltZX0pCgoKICAgICAgdmFyIGZpbGVuYW1lID0gRGF0ZS5wYXJzZShuZXcgRGF0ZSgpKSArICIuanBnIjsgLy8g6L2sZmlsZQoKICAgICAgcmV0dXJuIG5ldyBGaWxlKFt1OGFycl0sIGZpbGVuYW1lLCB7CiAgICAgICAgdHlwZTogbWltZQogICAgICB9KTsKICAgIH0sCgogICAgLyrljovnvKnlm77niYcNCiAgICAgIGZpbGXvvJrmlofku7Yo57G75Z6L5piv5Zu+54mH5qC85byPKe+8jA0KICAgICAgb2Jq77ya5paH5Lu25Y6L57yp5ZCO5a+56LGhd2lkdGjvvIwgaGVpZ2h077yMIHF1YWxpdHkoMC0xKQ0KICAgICAgY2FsbGJhY2vvvJrlrrnlmajmiJbogIXlm57osIPlh73mlbANCiAgICAgICovCiAgICBwaG90b0NvbXByZXNzOiBmdW5jdGlvbiBwaG90b0NvbXByZXNzKGZpbGUsIG9iaiwgY2FsbGJhY2spIHsKICAgICAgdmFyIHRoYXQgPSB0aGlzOwogICAgICB2YXIgcmVhZHkgPSBuZXcgRmlsZVJlYWRlcigpOwogICAgICAvKiDlvIDlp4vor7vlj5bmjIflrppGaWxl5a+56LGh5Lit55qE5YaF5a65LiDor7vlj5bmk43kvZzlrozmiJDml7Ys6L+U5Zue5LiA5LiqVVJM5qC85byP55qE5a2X56ym5LiyLiAqLwoKICAgICAgcmVhZHkucmVhZEFzRGF0YVVSTChmaWxlKTsKCiAgICAgIHJlYWR5Lm9ubG9hZCA9IGZ1bmN0aW9uIChldmVudCkgewogICAgICAgIHZhciByZSA9IGV2ZW50LnRhcmdldC5yZXN1bHQ7CiAgICAgICAgdGhhdC5jYW52YXNEYXRhVVJMKHJlLCBvYmosIGNhbGxiYWNrKTsgLy8g5byA5aeL5Y6L57ypCiAgICAgIH07CiAgICB9LAoKICAgIC8qIOWIqeeUqGNhbnZhc+aVsOaNruWMluWbvueJh+i/m+ihjOWOi+e8qSAqLwoKICAgIC8qIOWbvueJh+i9rGJhc2U2NCAqLwogICAgY2FudmFzRGF0YVVSTDogZnVuY3Rpb24gY2FudmFzRGF0YVVSTChwYXRoLCBvYmosIGNhbGxiYWNrKSB7CiAgICAgIHZhciBpbWcgPSBuZXcgSW1hZ2UoKTsKICAgICAgaW1nLnNyYyA9IHBhdGg7CgogICAgICBpbWcub25sb2FkID0gZnVuY3Rpb24gKCkgewogICAgICAgIHZhciB0aGF0ID0gdGhpczsgLy8g5oyH5YiwaW1nCiAgICAgICAgLy8g6buY6K6k5oyJ5q+U5L6L5Y6L57ypCgogICAgICAgIHZhciB3ID0gdGhhdC53aWR0aCwKICAgICAgICAgICAgaCA9IHRoYXQuaGVpZ2h0LAogICAgICAgICAgICBzY2FsZSA9IHcgLyBoOwogICAgICAgIHcgPSBvYmoud2lkdGggfHwgdzsKICAgICAgICBoID0gb2JqLmhlaWdodCB8fCB3IC8gc2NhbGU7CiAgICAgICAgdmFyIHF1YWxpdHkgPSAwLjc7IC8vIOm7mOiupOWbvueJh+i0qOmHj+S4ujAuNwogICAgICAgIC8vIOeUn+aIkGNhbnZhcwoKICAgICAgICB2YXIgY2FudmFzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiY2FudmFzIik7CiAgICAgICAgdmFyIGN0eCA9IGNhbnZhcy5nZXRDb250ZXh0KCIyZCIpOyAvLyDliJvlu7rlsZ7mgKfoioLngrkKCiAgICAgICAgdmFyIGFudyA9IGRvY3VtZW50LmNyZWF0ZUF0dHJpYnV0ZSgid2lkdGgiKTsKICAgICAgICBhbncubm9kZVZhbHVlID0gdzsKICAgICAgICB2YXIgYW5oID0gZG9jdW1lbnQuY3JlYXRlQXR0cmlidXRlKCJoZWlnaHQiKTsKICAgICAgICBhbmgubm9kZVZhbHVlID0gaDsKICAgICAgICBjYW52YXMuc2V0QXR0cmlidXRlTm9kZShhbncpOwogICAgICAgIGNhbnZhcy5zZXRBdHRyaWJ1dGVOb2RlKGFuaCk7IC8vIOmTuuW6leiJsgoKICAgICAgICBjdHguZmlsbFN0eWxlID0gIiNmZmYiOwogICAgICAgIGN0eC5maWxsUmVjdCgwLCAwLCB3LCBoKTsKICAgICAgICBjdHguZHJhd0ltYWdlKHRoYXQsIDAsIDAsIHcsIGgpOyAvLyDlm77lg4/otKjph48KCiAgICAgICAgaWYgKG9iai5xdWFsaXR5ICYmIG9iai5xdWFsaXR5ID49IDEgJiYgb2JqLnF1YWxpdHkgPCAwKSB7CiAgICAgICAgICBxdWFsaXR5ID0gb2JqLnF1YWxpdHk7CiAgICAgICAgfSAvLyBxdWFsaXR55YC86LaK5bCP77yM5omA57uY5Yi25Ye655qE5Zu+5YOP6LaK5qih57OKCgoKICAgICAgICB2YXIgYmFzZTY0ID0gY2FudmFzLnRvRGF0YVVSTCgiaW1hZ2UvanBlZyIsIHF1YWxpdHkpOyAvLyDlm57osIPlh73mlbDov5Tlm55iYXNlNjTnmoTlgLwKCiAgICAgICAgY2FsbGJhY2soYmFzZTY0KTsKICAgICAgfTsKICAgIH0sCiAgICAvLyAg6L+U5ZueZmlsZeaWh+S7tu+8jOiwg+eUqOaOpeWPo+aJp+ihjOS4iuS8oAogICAgdXBsb2FkTGljZTogZnVuY3Rpb24gdXBsb2FkTGljZShmaWxlKSB7CiAgICAgIHZhciBmb3JtZGF0YSA9IG5ldyBGb3JtRGF0YSgpOyAvL+WIm+W7umZvcm3lr7nosaEKCiAgICAgIGZvcm1kYXRhLmFwcGVuZCgidXBsb2FkLWltYWdlcyIsIGZpbGUpOyAvL+mAmui/h2FwcGVuZOWQkWZvcm3lr7nosaHmt7vliqDmlbDmja4KCiAgICAgIHRoaXMudXBsb2FkSW1nKGZvcm1kYXRhKTsKICAgIH0sCiAgICB1cGxvYWRJbWc6IGZ1bmN0aW9uIHVwbG9hZEltZyhmb3JtZGF0YSkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdmFyIHF1aWxsMCA9IHRoaXMuJHJlZnNbIm15UXVpbGxFZGl0b3IiXS5xdWlsbDsKICAgICAgdGhpcy4kYXhpb3MucG9zdCh0aGlzLiRzdG9yZS5zdGF0ZS5iYXNlVXJsICsgIi9zdG9jay91cGxvYWQiLCBmb3JtZGF0YSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgY29uc29sZS5sb2coIuWvjOaWh+acrOe8lui+keWZqOS4iuS8oOWbvueJhyIsIHJlcyk7CiAgICAgICAgdmFyIHBhdGhVcmwgPSBfdGhpcy4kc3RvcmUuc3RhdGUuYmFzZVVybCArICIvc3RvY2svZmlsZS8iICsgcmVzLmRhdGEuc3BsaXQoInwiKVswXTsgLy8g6I635Y+W5YWJ5qCH5omA5Zyo5L2N572uCgogICAgICAgIHZhciBsZW5ndGggPSBxdWlsbDAuZ2V0U2VsZWN0aW9uKCkuaW5kZXg7IC8vIOaPkuWFpeWbvueJh++8jHJlc+S4uuacjeWKoeWZqOi/lOWbnueahOWbvueJh+mTvuaOpeWcsOWdgAoKICAgICAgICBpZiAoX3RoaXMudXBsb2FkRmlsZVR5cGUuaW5kZXhPZigiaW1hZ2UiKSAhPT0gLTEpIHsKICAgICAgICAgIHF1aWxsMC5pbnNlcnRFbWJlZChsZW5ndGgsICJpbWFnZSIsIHBhdGhVcmwpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBxdWlsbDAuaW5zZXJ0RW1iZWQobGVuZ3RoLCAidmlkZW8iLCBwYXRoVXJsKTsKICAgICAgICB9IC8vIOiwg+aVtOWFieagh+WIsOacgOWQjgoKCiAgICAgICAgcXVpbGwwLnNldFNlbGVjdGlvbihsZW5ndGggKyAxKTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikgewogICAgICAgIGNvbnNvbGUubG9nKGVycik7CiAgICAgIH0pOwogICAgfSwKICAgIG9uRWRpdG9yQmx1cjogZnVuY3Rpb24gb25FZGl0b3JCbHVyKCkge30sCiAgICAvLyDlpLHljrvnhKbngrnkuovku7YKICAgIG9uRWRpdG9yRm9jdXM6IGZ1bmN0aW9uIG9uRWRpdG9yRm9jdXMoKSB7fSwKICAgIC8vIOiOt+W+l+eEpueCueS6i+S7tgogICAgLy8g5YaF5a655pS55Y+Y5LqL5Lu2CiAgICBvbkVkaXRvckNoYW5nZTogZnVuY3Rpb24gb25FZGl0b3JDaGFuZ2UoKSB7CiAgICAgIC8vIGNvbnNvbGUubG9nKHRoaXMuZWRpdG9yQ29udGVudCk7CiAgICAgIHRoaXMuJGVtaXQoImVkaXRvckNvbiIsIHRoaXMuZWRpdG9yQ29udGVudCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["add-release.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <!--  新增时输入 -->\r\n    <div class=\"add-release-container\">\r\n      <quill-editor\r\n        v-model=\"editorContent\"\r\n        ref=\"myQuillEditor\"\r\n        :options=\"editorOption\"\r\n        @blur=\"onEditorBlur($event)\"\r\n        @focus=\"onEditorFocus($event)\"\r\n        @change=\"onEditorChange($event)\"\r\n      >\r\n      </quill-editor>\r\n      <input\r\n        style=\"position: fixed;left: -2000px;top: -2000px;\"\r\n        @change=\"handleAdd_quill_editor\"\r\n        id=\"input_hide\"\r\n        class=\"upload_input\"\r\n        type=\"file\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { quillEditor } from \"vue-quill-editor\"; //调用编辑器\r\nimport * as Quill from \"quill\";\r\nimport \"quill/dist/quill.core.css\";\r\nimport \"quill/dist/quill.snow.css\";\r\nimport \"quill/dist/quill.bubble.css\";\r\nimport { addQuillTitle } from \"../utils/quill_title\";\r\n\r\nimport ImageResize from \"quill-image-resize-module\";\r\nQuill.register(\"modules/imageResize\", ImageResize);\r\n\r\nlet fontSizeStyle = Quill.import(\"attributors/style/size\");\r\nfontSizeStyle.whitelist = [\r\n  \"10px\",\r\n  \"12px\",\r\n  \"14px\",\r\n  \"16px\",\r\n  \"18px\",\r\n  \"20px\",\r\n  \"22px\",\r\n  \"24px\",\r\n  \"26px\",\r\n  \"32px\",\r\n  \"48px\",\r\n];\r\nQuill.register(fontSizeStyle, true);\r\nlet fonts = [\r\n  false,\r\n  \"SimSun\",\r\n  \"SimHei\",\r\n  \"Microsoft-YaHei\",\r\n  \"KaiTi\",\r\n  \"FangSong\",\r\n  \"Arial\",\r\n  \"sans-serif\",\r\n];\r\nlet Font = Quill.import(\"formats/font\");\r\nFont.whitelist = fonts; //将字体加入到白名单\r\nQuill.register(Font, true);\r\n\r\nconst handlers = {\r\n  shadeBox: null,\r\n  // 添加工具方法\r\n  sourceEditor: function() {\r\n    // alert('我新添加的工具方法');\r\n    const container = this.container;\r\n    const firstChild = container.nextElementSibling.firstChild;\r\n\r\n    // 在第一次点击源码编辑的时候，会在整个工具条上加一个div，层级比工具条高，再次点击工具条任意位置，就会退出源码编辑。可以在下面cssText里面加个背景颜色看看效果。\r\n\r\n    if (!this.shadeBox) {\r\n      let shadeBox = (this.shadeBox = document.createElement(\"div\"));\r\n\r\n      shadeBox.style.cssText =\r\n        \"position:absolute; top:0; left:0; width:100%; height:100%; cursor:pointer;\";\r\n      container.style.position = \"relative\";\r\n      container.appendChild(shadeBox);\r\n      firstChild.innerText = firstChild.innerHTML;\r\n\r\n      shadeBox.addEventListener(\r\n        \"click\",\r\n        function() {\r\n          this.style.display = \"none\";\r\n          firstChild.innerHTML = firstChild.innerText.trim();\r\n        },\r\n        false\r\n      );\r\n    } else {\r\n      this.shadeBox.style.display = \"block\";\r\n      firstChild.innerText = firstChild.innerHTML;\r\n    }\r\n  },\r\n  image: function(value) {\r\n    if (value) {\r\n      document.querySelector(\"#input_hide\").click();\r\n    } else {\r\n      this.quill.format(\"image\", false);\r\n    }\r\n  },\r\n  video: function(value) {\r\n    if (value) {\r\n      document.querySelector(\"#input_hide\").click();\r\n    } else {\r\n      this.quill.format(\"video\", false);\r\n    }\r\n  },\r\n};\r\n\r\n// 在使用的页面中初始化按钮样式\r\nconst initButton = function() {\r\n  // 样式随便改\r\n  const sourceEditorButton = document.querySelector(\".ql-sourceEditor\");\r\n  sourceEditorButton.style.cssText = \"font-size:18px\";\r\n\r\n  // 加了elementui的icon\r\n  sourceEditorButton.classList.add(\"el-icon-edit-outline\");\r\n  // 鼠标放上去显示的提示文字\r\n  sourceEditorButton.title = \"源码编辑\";\r\n};\r\n\r\nexport default {\r\n  components: {\r\n    quillEditor,\r\n  },\r\n  data() {\r\n    return {\r\n      editorContent: \"\",\r\n      str: \"\",\r\n      editorOption: {\r\n        placeholder: \"请在这里输入\",\r\n        modules: {\r\n          clipboard: {\r\n            matchVisual: false,\r\n          },\r\n          toolbar: {\r\n            container: [\r\n              [\"bold\", \"italic\", \"underline\", \"strike\"], //加粗，斜体，下划线，删除线\r\n              [\"blockquote\", \"code-block\"], //引用，代码块\r\n              [\r\n                {\r\n                  header: 1,\r\n                },\r\n                {\r\n                  header: 2,\r\n                },\r\n              ], // 标题，键值对的形式；1、2表示字体大小\r\n              [\r\n                {\r\n                  list: \"ordered\",\r\n                },\r\n                {\r\n                  list: \"bullet\",\r\n                },\r\n              ], //列表\r\n              [\r\n                {\r\n                  script: \"sub\",\r\n                },\r\n                {\r\n                  script: \"super\",\r\n                },\r\n              ], // 上下标\r\n              [\r\n                {\r\n                  indent: \"-1\",\r\n                },\r\n                {\r\n                  indent: \"+1\",\r\n                },\r\n              ], // 缩进\r\n              [\r\n                {\r\n                  direction: \"rtl\",\r\n                },\r\n              ], // 文本方向\r\n              [\r\n                {\r\n                  size: fontSizeStyle.whitelist,\r\n                },\r\n              ], // 字体大小\r\n              [\r\n                {\r\n                  header: [1, 2, 3, 4, 5, 6],\r\n                },\r\n              ], //几级标题\r\n              [\r\n                {\r\n                  color: [],\r\n                },\r\n                {\r\n                  background: [],\r\n                },\r\n              ], // 字体颜色，字体背景颜色\r\n              [\r\n                {\r\n                  font: fonts,\r\n                },\r\n              ], //字体\r\n              [\r\n                {\r\n                  align: [],\r\n                },\r\n              ], //对齐方式\r\n              [\"clean\"], //清除字体样式\r\n              [\"image\", \"video\"], //上传图片、上传视频\r\n              [\"sourceEditor\"],\r\n              // ['revoke'],\r\n              // ['redo']\r\n            ],\r\n            handlers: handlers,\r\n          },\r\n          imageResize: {\r\n            displayStyles: {\r\n              backgroundColor: \"black\",\r\n              border: \"none\",\r\n              color: \"white\",\r\n            },\r\n            modules: [\"Resize\", \"DisplaySize\", \"Toolbar\"],\r\n          },\r\n        },\r\n      },\r\n      uploadFileType: \"\",\r\n      changeText: [],\r\n    };\r\n  },\r\n  props: [\"editorDadContent\"],\r\n  computed: {\r\n    editor() {\r\n      return this.$refs.myQuillEditor.quill;\r\n    },\r\n  },\r\n\r\n  mounted() {\r\n    initButton();\r\n    this.editorContent = this.editorDadContent;\r\n    // console.log(this.editorContent);\r\n\r\n    addQuillTitle();\r\n  },\r\n  methods: {\r\n    // 富文本 上传图片\r\n    handleAdd_quill_editor(e) {\r\n      let file = e.target.files[0];\r\n      // console.log(file);\r\n      this.uploadFileType = file.type;\r\n\r\n      let that = this;\r\n      if (file === undefined) {\r\n        return;\r\n      }\r\n      if (file.size / 1024 > 1025) {\r\n        // 文件大于1M（根据需求更改），进行压缩上传\r\n        this.photoCompress(\r\n          file,\r\n          {\r\n            // 调用压缩图片方法\r\n            quality: 0.7,\r\n          },\r\n          function(base64Codes) {\r\n            // console.log(\"压缩后：\" + base.length / 1024 + \" \" + base);\r\n            let bl = that.base64UrlToBlob(base64Codes);\r\n            // file.append('file', bl, 'file_' + Date.parse(new Date()) + '.jpg') // 文件对象\r\n            that.uploadLice(bl); // 请求图片上传接口\r\n          }\r\n        );\r\n      } else {\r\n        // 小于等于1M 原图上传\r\n        this.uploadLice(file);\r\n      }\r\n    },\r\n    // base64 转 Blob 格式 和file格式\r\n    base64UrlToBlob(urlData) {\r\n      let arr = urlData.split(\",\"),\r\n        mime = arr[0].match(/:(.*?);/)[1], // 去掉url的头，并转化为byte\r\n        bstr = atob(arr[1]), // 处理异常,将ascii码小于0的转换为大于0\r\n        n = bstr.length,\r\n        u8arr = new Uint8Array(n);\r\n      while (n--) {\r\n        u8arr[n] = bstr.charCodeAt(n);\r\n      }\r\n      // 转blob\r\n      // return new Blob([u8arr], {type: mime})\r\n      let filename = Date.parse(new Date()) + \".jpg\";\r\n      // 转file\r\n      return new File([u8arr], filename, {\r\n        type: mime,\r\n      });\r\n    },\r\n    /*压缩图片\r\n      file：文件(类型是图片格式)，\r\n      obj：文件压缩后对象width， height， quality(0-1)\r\n      callback：容器或者回调函数\r\n      */\r\n    photoCompress(file, obj, callback) {\r\n      let that = this;\r\n      let ready = new FileReader();\r\n      /* 开始读取指定File对象中的内容. 读取操作完成时,返回一个URL格式的字符串. */\r\n      ready.readAsDataURL(file);\r\n      ready.onload = (event) => {\r\n        let re = event.target.result;\r\n        that.canvasDataURL(re, obj, callback); // 开始压缩\r\n      };\r\n    },\r\n    /* 利用canvas数据化图片进行压缩 */\r\n    /* 图片转base64 */\r\n    canvasDataURL(path, obj, callback) {\r\n      let img = new Image();\r\n      img.src = path;\r\n      img.onload = function() {\r\n        let that = this; // 指到img\r\n        // 默认按比例压缩\r\n        let w = that.width,\r\n          h = that.height,\r\n          scale = w / h;\r\n        w = obj.width || w;\r\n        h = obj.height || w / scale;\r\n        let quality = 0.7; // 默认图片质量为0.7\r\n        // 生成canvas\r\n        let canvas = document.createElement(\"canvas\");\r\n        let ctx = canvas.getContext(\"2d\");\r\n\r\n        // 创建属性节点\r\n        let anw = document.createAttribute(\"width\");\r\n        anw.nodeValue = w;\r\n        let anh = document.createAttribute(\"height\");\r\n        anh.nodeValue = h;\r\n        canvas.setAttributeNode(anw);\r\n        canvas.setAttributeNode(anh);\r\n        // 铺底色\r\n        ctx.fillStyle = \"#fff\";\r\n        ctx.fillRect(0, 0, w, h);\r\n        ctx.drawImage(that, 0, 0, w, h);\r\n\r\n        // 图像质量\r\n        if (obj.quality && obj.quality >= 1 && obj.quality < 0) {\r\n          quality = obj.quality;\r\n        }\r\n        // quality值越小，所绘制出的图像越模糊\r\n        let base64 = canvas.toDataURL(\"image/jpeg\", quality);\r\n        // 回调函数返回base64的值\r\n        callback(base64);\r\n      };\r\n    },\r\n    //  返回file文件，调用接口执行上传\r\n    uploadLice(file) {\r\n      let formdata = new FormData(); //创建form对象\r\n      formdata.append(\"upload-images\", file); //通过append向form对象添加数据\r\n      this.uploadImg(formdata);\r\n    },\r\n    uploadImg(formdata) {\r\n      let quill0 = this.$refs[\"myQuillEditor\"].quill;\r\n\r\n      this.$axios\r\n        .post(this.$store.state.baseUrl + \"/stock/upload\", formdata)\r\n        .then((res) => {\r\n          console.log(\"富文本编辑器上传图片\", res);\r\n          let pathUrl =\r\n            this.$store.state.baseUrl + \"/stock/file/\" + res.data.split(\"|\")[0];\r\n          // 获取光标所在位置\r\n          let length = quill0.getSelection().index;\r\n          // 插入图片，res为服务器返回的图片链接地址\r\n          if (this.uploadFileType.indexOf(\"image\") !== -1) {\r\n            quill0.insertEmbed(length, \"image\", pathUrl);\r\n          } else {\r\n            quill0.insertEmbed(length, \"video\", pathUrl);\r\n          }\r\n          // 调整光标到最后\r\n          quill0.setSelection(length + 1);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n    onEditorBlur() {}, // 失去焦点事件\r\n    onEditorFocus() {}, // 获得焦点事件\r\n    // 内容改变事件\r\n    onEditorChange() {\r\n      // console.log(this.editorContent);\r\n      this.$emit(\"editorCon\", this.editorContent);\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style lang=\"scss\">\r\n.add-release-container {\r\n  width: 100%;\r\n}\r\n\r\n.ql-toolbar.ql-snow .ql-formats {\r\n  margin-right: 5px;\r\n}\r\n\r\n.ql-snow .ql-editor {\r\n  height: 600px;\r\n}\r\n\r\n.ql-snow .ql-picker.ql-size {\r\n  width: 65px;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components"}]}